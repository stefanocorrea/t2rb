[{"D:\\www\\t2rb\\react-electron\\src\\logos\\logo.js":"1","D:\\www\\t2rb\\react-electron\\src\\App.js":"2","D:\\www\\t2rb\\react-electron\\src\\class\\Library.class.js":"3","D:\\www\\t2rb\\react-electron\\src\\index.js":"4","D:\\www\\t2rb\\react-electron\\src\\config\\config.js":"5","D:\\www\\t2rb\\react-electron\\src\\helpers\\createXmlAttrString.js":"6","D:\\www\\t2rb\\react-electron\\src\\class\\Folder.class.js":"7","D:\\www\\t2rb\\react-electron\\src\\class\\Playlist.class.js":"8","D:\\www\\t2rb\\react-electron\\src\\class\\HotCue.class.js":"9","D:\\www\\t2rb\\react-electron\\src\\class\\MemoryCue.class.js":"10","D:\\www\\t2rb\\react-electron\\src\\helpers\\getOpenKey.js":"11","D:\\www\\t2rb\\react-electron\\src\\helpers\\convertRGBToHex.js":"12","D:\\www\\t2rb\\react-electron\\src\\helpers\\decodeString.js":"13","D:\\www\\t2rb\\react-electron\\src\\helpers\\convertHexToName.js":"14","D:\\www\\t2rb\\react-electron\\src\\helpers\\getMusicalKey.js":"15","D:\\www\\t2rb\\react-electron\\src\\helpers\\convertHexToRGB.js":"16","D:\\www\\t2rb\\react-electron\\src\\class\\Track.class.js":"17","D:\\www\\t2rb\\react-electron\\src\\helpers\\createTrackFromXML.js":"18","D:\\www\\t2rb\\react-electron\\src\\context\\example.button.js":"19","D:\\www\\t2rb\\react-electron\\src\\context\\app.context.js":"20","D:\\www\\t2rb\\react-electron\\src\\config\\theme.config.js":"21","D:\\www\\t2rb\\react-electron\\src\\screens\\main.screen.js":"22","D:\\www\\t2rb\\react-electron\\src\\components\\appBar.js":"23","D:\\www\\t2rb\\react-electron\\src\\config\\screens.js":"24","D:\\www\\t2rb\\react-electron\\src\\screens\\config.screen.js":"25","D:\\www\\t2rb\\react-electron\\src\\screens\\working.screen.js":"26","D:\\www\\t2rb\\react-electron\\src\\screens\\workComplete.screen.js":"27","D:\\www\\t2rb\\react-electron\\src\\screens\\workCanceled.screen.js":"28","D:\\www\\t2rb\\react-electron\\src\\screens\\workFail.screen.js":"29","D:\\www\\t2rb\\github\\t2rb\\src\\index.js":"30","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\createTrackFromXML.js":"31","D:\\www\\t2rb\\github\\t2rb\\src\\config\\config.js":"32","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\getOpenKey.js":"33","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\getMusicalKey.js":"34","D:\\www\\t2rb\\github\\t2rb\\src\\screens\\config.screen.js":"35"},{"size":4726,"mtime":1653094629089,"results":"36","hashOfConfig":"37"},{"size":737,"mtime":1653364760802,"results":"38","hashOfConfig":"37"},{"size":7809,"mtime":1653005449121,"results":"39","hashOfConfig":"37"},{"size":471,"mtime":1653364799143,"results":"40","hashOfConfig":"37"},{"size":1062,"mtime":1653359727823,"results":"41","hashOfConfig":"37"},{"size":219,"mtime":1653007621514,"results":"42","hashOfConfig":"37"},{"size":1236,"mtime":1653007202571,"results":"43","hashOfConfig":"37"},{"size":887,"mtime":1652985779717,"results":"44","hashOfConfig":"37"},{"size":1401,"mtime":1653053733428,"results":"45","hashOfConfig":"37"},{"size":630,"mtime":1653053715162,"results":"46","hashOfConfig":"37"},{"size":1365,"mtime":1652769647012,"results":"47","hashOfConfig":"37"},{"size":188,"mtime":1652427033385,"results":"48","hashOfConfig":"37"},{"size":157,"mtime":1653006877708,"results":"49","hashOfConfig":"37"},{"size":193,"mtime":1652457180712,"results":"50","hashOfConfig":"37"},{"size":1335,"mtime":1652459851340,"results":"51","hashOfConfig":"37"},{"size":300,"mtime":1652460606927,"results":"52","hashOfConfig":"37"},{"size":9156,"mtime":1653007716008,"results":"53","hashOfConfig":"37"},{"size":9235,"mtime":1653053946157,"results":"54","hashOfConfig":"37"},{"size":431,"mtime":1653331837518,"results":"55","hashOfConfig":"37"},{"size":10896,"mtime":1653367326831,"results":"56","hashOfConfig":"37"},{"size":525,"mtime":1653337407963,"results":"57","hashOfConfig":"37"},{"size":537,"mtime":1653363699157,"results":"58","hashOfConfig":"37"},{"size":1588,"mtime":1653343122130,"results":"59","hashOfConfig":"37"},{"size":207,"mtime":1653329992303,"results":"60","hashOfConfig":"37"},{"size":2704,"mtime":1653366418883,"results":"61","hashOfConfig":"37"},{"size":1269,"mtime":1653363517579,"results":"62","hashOfConfig":"37"},{"size":1135,"mtime":1653367720736,"results":"63","hashOfConfig":"37"},{"size":768,"mtime":1653362534704,"results":"64","hashOfConfig":"37"},{"size":752,"mtime":1653362669668,"results":"65","hashOfConfig":"37"},{"size":471,"mtime":1653364799143,"results":"66","hashOfConfig":"67"},{"size":9235,"mtime":1653053946157,"results":"68","hashOfConfig":"67"},{"size":1062,"mtime":1653359727823,"results":"69","hashOfConfig":"67"},{"size":1365,"mtime":1652769647012,"results":"70","hashOfConfig":"67"},{"size":1335,"mtime":1652459851340,"results":"71","hashOfConfig":"67"},{"size":2704,"mtime":1653366418883,"results":"72","hashOfConfig":"67"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1uo61ks",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"81"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k0l082",{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\www\\t2rb\\react-electron\\src\\logos\\logo.js",[],["151","152"],"D:\\www\\t2rb\\react-electron\\src\\App.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\Library.class.js",["153","154","155","156","157","158","159","160","161"],"import XMLParser from 'react-xml-parser'\r\nimport { Folder } from './Folder.class'\r\nimport { Playlist } from './Playlist.class'\r\nimport { Track } from './Track.class'\r\nimport { HotCue } from './HotCue.class'\r\nimport { MemoryCue } from './MemoryCue.class'\r\nimport { getOpenKey } from '../helpers/getOpenKey'\r\nimport { createTrackFromTraktorXML } from '../helpers/createTrackFromXML'\r\nimport { createTrackFromRekordboxXML } from '../helpers/createTrackFromXML'\r\nimport { convertRGBToHex } from '../helpers/convertRGBToHex'\r\nimport moment from 'moment'\r\nimport { decodeString } from '../helpers/decodeString'\r\n\r\nconst fs = window.require('fs').promises\r\n\r\nexport class Library {\r\n  originalLibrary\r\n  origin\r\n\r\n  constructor() {\r\n    this.collection = []\r\n    this.playlists = []\r\n  }\r\n\r\n  recursiveReadTraktorPlaylistNode(node) {\r\n    /* TODO: organize names */\r\n    let a\r\n    switch (node.attributes.TYPE) {\r\n      case 'FOLDER':\r\n        a = new Folder(node.attributes.NAME)\r\n        node.children[0].children.map(subnode => {\r\n          switch (subnode.attributes.TYPE) {\r\n            case 'FOLDER':\r\n              a.addFolder(this.recursiveReadTraktorPlaylistNode(subnode))\r\n              break\r\n            case 'PLAYLIST':\r\n              a.addPlaylist(this.recursiveReadTraktorPlaylistNode(subnode))\r\n              break\r\n            default:\r\n          }\r\n          return true\r\n        })\r\n        break\r\n      case 'PLAYLIST':\r\n        a = new Playlist(node.attributes.NAME)\r\n        node.children[0].children.map(subnode => {\r\n          let location = subnode.children[0].attributes.KEY.replaceAll(\r\n            '/:',\r\n            '/'\r\n          )\r\n          let track = new Track(location)\r\n\r\n          //      console.log(location)\r\n          let aaa = this.getTrackByLocation(location)\r\n          //track.setId(this.getTrackByLocation(location).id)\r\n\r\n          a.addTrack(track)\r\n          return true\r\n        })\r\n        break\r\n      default:\r\n        a = false\r\n    }\r\n\r\n    return a\r\n  }\r\n\r\n  importPlaylistsFromTraktor() {\r\n    let originalPlaylists = this.originalLibrary.getElementsByTagName(\r\n      'PLAYLISTS'\r\n    )\r\n\r\n    let a = []\r\n    originalPlaylists.length > 0 &&\r\n      originalPlaylists[0].children?.map(node =>\r\n        a.push(this.recursiveReadTraktorPlaylistNode(node))\r\n      )\r\n\r\n    this.playlists = a\r\n\r\n    return true\r\n  }\r\n\r\n  importCollectionFromTraktor() {\r\n    this.originalLibrary\r\n      .getElementsByTagName('COLLECTION')[0]\r\n      .getElementsByTagName('ENTRY')\r\n      .map((trackNode, index) => {\r\n        let xmlString = new XMLParser().toString(trackNode)\r\n        let track = createTrackFromTraktorXML(xmlString, index + 1)\r\n\r\n        return this.collection.push(track)\r\n      })\r\n\r\n    //    console.log(a)\r\n  }\r\n\r\n  importPlaylistsFromRekordbox() {\r\n    /* TODO: Read playlists from Rekordbox */\r\n  }\r\n\r\n  importCollectionFromRekordbox() {\r\n    this.originalLibrary\r\n      .getElementsByTagName('COLLECTION')[0]\r\n      .getElementsByTagName('TRACK')\r\n      .map((trackNode, index) => {\r\n        let xmlString = new XMLParser().toString(trackNode)\r\n        let track = createTrackFromRekordboxXML(xmlString, index + 1)\r\n\r\n        return this.collection.push(track)\r\n      })\r\n  }\r\n\r\n  guessOrigin() {\r\n    if (this.originalLibrary.name === 'NML') return (this.origin = 'traktor')\r\n    if (this.originalLibrary.name === 'DJ_PLAYLISTS')\r\n      return (this.origin = 'rekordbox')\r\n  }\r\n\r\n  setOrigin(value) {\r\n    this.origin = value\r\n  }\r\n\r\n  setOriginalLibrary(value) {\r\n    if (!value) return false\r\n    this.originalLibrary = value\r\n    this.setOrigin(this.guessOrigin())\r\n\r\n    return true\r\n  }\r\n\r\n  importPlaylists() {\r\n    if (this.origin === 'traktor') return this.importPlaylistsFromTraktor()\r\n    if (this.origin === 'rekordbox') return this.importPlaylistsFromRekordbox()\r\n  }\r\n\r\n  importCollection() {\r\n    if (this.origin === 'traktor') return this.importCollectionFromTraktor()\r\n    if (this.origin === 'rekordbox') return this.importCollectionFromRekordbox()\r\n  }\r\n\r\n  exportCollectionAsTraktor() {\r\n    if (this.collection.length < 1) return ''\r\n\r\n    return (\r\n      `<COLLECTION ENTRIES=\"${this.collection.length}\">` +\r\n      this.collection.reduce((acum, track) => {\r\n        return acum + track.exportAsTraktor()\r\n      }, '') +\r\n      '</COLLECTION>'\r\n    )\r\n  }\r\n\r\n  exportPlaylistsAsTraktor() {\r\n    if (this.playlists.length < 1) return ''\r\n    let output = ''\r\n    output += `<PLAYLISTS>`\r\n    this.playlists.map(folder => (output += folder.exportAsTraktor()))\r\n    output += `</PLAYLISTS>`\r\n    return output\r\n  }\r\n\r\n  exportCollectionAsRekordbox() {\r\n    if (this.collection.length < 1) return ''\r\n\r\n    return (\r\n      `<COLLECTION Entries=\"${this.collection.length}\">` +\r\n      this.collection.reduce((acum, curr) => {\r\n        return acum + curr.exportAsRekordbox()\r\n      }, '') +\r\n      '</COLLECTION>'\r\n    )\r\n  }\r\n\r\n  exportPlaylistsAsRekordbox() {\r\n    if (this.playlists.length < 1) return ''\r\n    return (\r\n      '<PLAYLISTS>' +\r\n      this.playlists?.reduce((acum, curr) => {\r\n        return acum + curr.exportAsRekordbox()\r\n      }, '') +\r\n      '</PLAYLISTS>'\r\n    )\r\n  }\r\n\r\n  exportAsTraktor() {\r\n    let output = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>'\r\n    output += '<NML VERSION=\"19\">'\r\n    output +=\r\n      '<HEAD COMPANY=\"www.native-instruments.com\" PROGRAM=\"Traktor\"></HEAD>'\r\n    output += this.exportCollectionAsTraktor()\r\n    output += this.exportPlaylistsAsTraktor()\r\n    output += '</NML>'\r\n    return output\r\n  }\r\n\r\n  exportAsRekordbox() {\r\n    let output = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'\r\n    output += '<DJ_PLAYLISTS Version=\"1.0.0\">'\r\n    output +=\r\n      '<PRODUCT Name=\"rekordbox\" Version=\"6.6.3\" Company=\"AlphaTheta\" />'\r\n    output += this.exportCollectionAsRekordbox()\r\n    output += this.exportPlaylistsAsRekordbox()\r\n    output += '</DJ_PLAYLISTS>'\r\n\r\n    return output\r\n  }\r\n\r\n  exportToFile(program, location) {\r\n    // try {\r\n    //   fs.writeFileSync(location, this.export(program), \"utf-8\");\r\n    //   alert(\"salvei\");\r\n    // } catch (e) {\r\n    //   alert(\"Failed to save the file !\");\r\n    // }\r\n  }\r\n\r\n  export(program) {\r\n    if (program === 'traktor') return this.exportAsTraktor()\r\n    if (program === 'rekordbox') return this.exportAsRekordbox()\r\n  }\r\n\r\n  importLibrary(xmlLibraryString) {\r\n    const regex = /AUDIO_ID=\\\"[^\\\"]*\"/gm\r\n    let xml = new XMLParser().parseFromString(\r\n      xmlLibraryString.replace(regex, ``)\r\n    )\r\n\r\n    this.setOriginalLibrary(xml)\r\n\r\n    this.importCollection()\r\n    this.importPlaylists()\r\n\r\n    return true\r\n  }\r\n\r\n  // async importLibraryFile(xmlLibraryLocation) {\r\n  //   /* TODO: extrat xml string from file */\r\n  //   let xmlLibraryString = await fs.readFile(xmlLibraryLocation, 'utf-8')\r\n\r\n  //   this.importLibrary(xmlLibraryString)\r\n\r\n  //   return true\r\n  // }\r\n\r\n  setCollection(newCollection) {\r\n    this.collection = newCollection\r\n  }\r\n  setPlaylists(newPlaylists) {\r\n    this.playlists = newPlaylists\r\n    this.reSetTracksIdsInPlaylists()\r\n  }\r\n\r\n  reSetTracksIdsInPlaylists() {\r\n    this.playlists.map(node => {\r\n      return this.recursiveReSetTracksIdsInPlaylists(node)\r\n    })\r\n  }\r\n\r\n  getTrackByLocation(fileLocation) {\r\n    let trackFound = this.collection.reduce((acum, track) => {\r\n      return !acum && track.location === decodeString(fileLocation)\r\n        ? track\r\n        : acum\r\n    }, false)\r\n    return trackFound\r\n  }\r\n\r\n  recursiveReSetTracksIdsInPlaylists(node) {\r\n    node.playlists.map(playlist =>\r\n      playlist.tracks.map(track => {\r\n        let trackInCollection = this.getTrackByLocation(track.location)\r\n        return trackInCollection && track.setId(trackInCollection.id)\r\n      })\r\n    )\r\n\r\n    node.folders.map(node => this.recursiveReSetTracksIdsInPlaylists(node))\r\n  }\r\n}\r\n",["162","163"],"D:\\www\\t2rb\\react-electron\\src\\index.js",[],"D:\\www\\t2rb\\react-electron\\src\\config\\config.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\createXmlAttrString.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\Folder.class.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\Playlist.class.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\HotCue.class.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\MemoryCue.class.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\getOpenKey.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\convertRGBToHex.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\decodeString.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\convertHexToName.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\getMusicalKey.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\convertHexToRGB.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\Track.class.js",["164"],"import { HotCue } from './HotCue.class'\r\nimport { convertHexToName } from '../helpers/convertHexToName'\r\nimport moment from 'moment'\r\nimport { getMusicalKey } from '../helpers/getMusicalKey'\r\nimport { attr } from '../helpers/createXmlAttrString.js'\r\n\r\nexport class Track {\r\n  id\r\n  title\r\n  artist\r\n  album\r\n  location\r\n  genre\r\n  type\r\n  size\r\n  duration\r\n  trackNumber\r\n  bpm\r\n  peakDb\r\n  perceivedDb\r\n  analyzedDb\r\n  modifiedDateTime\r\n  producer\r\n  catalog\r\n  importDateTime\r\n  lastPlayedDateTime\r\n  releaseDate\r\n  bitRate\r\n  md5\r\n  comments\r\n  playCount\r\n  rating\r\n  sampleRate\r\n  remixer\r\n  key\r\n  label\r\n  mix\r\n  color\r\n  hotCues\r\n  memoryCues\r\n  gridStart\r\n  modificationDateTime\r\n  originalXml\r\n\r\n  constructor(location) {\r\n    this.location = location\r\n  }\r\n\r\n  setId(val) {\r\n    if (val) this.id = val\r\n  }\r\n  setTitle(val) {\r\n    if (val) this.title = val\r\n  }\r\n  setArtist(val) {\r\n    if (val) this.artist = val\r\n  }\r\n  setAlbum(val) {\r\n    if (val) this.album = val\r\n  }\r\n  setLocation(val) {\r\n    if (val) this.location = val\r\n  }\r\n  setGenre(val) {\r\n    if (val) this.genre = val\r\n  }\r\n  setType(val) {\r\n    if (val) this.type = val.replace(' File', '').toLowerCase()\r\n  }\r\n  setSize(val) {\r\n    if (val) this.size = parseFloat(val)\r\n  }\r\n  setDuration(val) {\r\n    if (val) this.duration = parseFloat(val)\r\n  }\r\n  setTrackNumber(val) {\r\n    if (val) this.trackNumber = val\r\n  }\r\n  setBpm(val) {\r\n    if (val) this.bpm = parseFloat(val)\r\n  }\r\n  setPeakDb(val) {\r\n    if (val) this.peakDb = val\r\n  }\r\n  setPerceivedDb(val) {\r\n    if (val) this.perceivedDb = val\r\n  }\r\n  setAnalyzedDb(val) {\r\n    if (val) this.analyzedDb = val\r\n  }\r\n  setModifiedDateTime(val) {\r\n    if (val) this.modificationDateTime = val\r\n  }\r\n  setProducer(val) {\r\n    if (val) this.producer = val\r\n  }\r\n  setCatalog(val) {\r\n    if (val) this.catalog = val\r\n  }\r\n  setImportDateTime(val) {\r\n    if (val) this.importDateTime = val\r\n  }\r\n  setLastPlayedDateTime(val) {\r\n    if (val) this.lastPlayedDateTime = val\r\n  }\r\n  setReleaseDate(val) {\r\n    if (val) this.releaseDate = val\r\n  }\r\n  setBitRate(val) {\r\n    if (val) this.bitRate = val\r\n  }\r\n  setMd5(val) {\r\n    if (val) this.md5 = val\r\n  }\r\n  setComments(val) {\r\n    if (val) this.comments = val\r\n  }\r\n  setPlayCount(val) {\r\n    if (val) this.playCount = parseInt(val)\r\n  }\r\n  setRating(val) {\r\n    if (val) this.rating = parseInt(val)\r\n  }\r\n  setSampleRate(val) {\r\n    if (val) this.sampleRate = val\r\n  }\r\n  setRemixer(val) {\r\n    if (val) this.remixer = val\r\n  }\r\n  setKey(val) {\r\n    if (val) this.key = val\r\n  }\r\n  setLabel(val) {\r\n    if (val) this.label = val\r\n  }\r\n  setMix(val) {\r\n    if (val) this.mix = val\r\n  }\r\n  setColor(val) {\r\n    if (val) this.color = val\r\n  }\r\n  setHotCues(val) {\r\n    if (val) this.hotCues = val\r\n  }\r\n  setMemoryCues(val) {\r\n    if (val) this.memoryCues = val\r\n  }\r\n\r\n  setOriginalXml(val) {\r\n    if (val) this.originalXml = val\r\n  }\r\n\r\n  setGridStart(val) {\r\n    if (val) this.gridStart = parseFloat(val)\r\n  }\r\n\r\n  getLocation() {\r\n    return this.location\r\n  }\r\n\r\n  getId() {\r\n    return this.id\r\n  }\r\n\r\n  exportAsRekordbox() {\r\n    return (\r\n      `<TRACK ${attr('TrackID', this.id)} ${attr('Name', this.title)} \r\n          ${attr('Artist', this.artist)} ${attr(\r\n        'Composer',\r\n        this.producer\r\n      )} ${attr('Album', this.album)} ${attr(\r\n        'Grouping',\r\n        convertHexToName(this.color)\r\n      )}  \r\n         ${attr('Genre', this.genre)} ${attr(\r\n        'Kind',\r\n        this.type.toUpperCase() + ' File'\r\n      )} ${attr('Size', this.size)} ${attr('TotalTime', this.duration / 1000)} \r\n          ${attr('DiscNumber', this.catalog)} ${attr(\r\n        'TrackNumber',\r\n        this.trackNumber\r\n      )} ${attr('Year', moment(this.releaseDate).format('YYYY'))} ${attr(\r\n        'AverageBpm',\r\n        this.bpm\r\n      )} ${attr(\r\n        'DateAdded',\r\n        this.importDateTime\r\n          ? moment(this.importDateTime).format('YYYY-MM-DD')\r\n          : null\r\n      )} ${attr('BitRate', this.bitRate / 1000)} ${attr(\r\n        'SampleRate',\r\n        this.sampleRate / 1000\r\n      )} ${attr('Comments', this.comments)}\r\n         ${attr('PlayCount', this.playCount)} ${attr(\r\n        'Rating',\r\n        this.rating\r\n      )} ${attr('Location', 'file://localhost/' + this.location)}\r\n          ${attr('Remixer', this.remixer)} ${attr(\r\n        'Tonality',\r\n        getMusicalKey(this.key)\r\n      )} ${attr('Label', this.label)} ${attr('Mix', this.mix)} ${attr(\r\n        'Colour',\r\n        this.color?.replace('#', '0x')\r\n      )}>` +\r\n      `<TEMPO Inizio=\"${this.gridStart}\" Bpm=\"${this.bpm}\" Metro=\"4/4\" Battito=\"1\" />` +\r\n      (this.hotCues.length > 0 &&\r\n        this.hotCues.reduce((acum, curr) => {\r\n          return acum + curr.exportAsRekordbox()\r\n        }, '')) +\r\n      (this.memoryCues.length > 0 &&\r\n        this.memoryCues.reduce((acum, curr) => {\r\n          return acum + curr.exportAsRekordbox()\r\n        }, '')) +\r\n      '</TRACK>'\r\n    )\r\n  }\r\n\r\n  exportAsTraktor() {\r\n    let output = ''\r\n\r\n    let file = this.location.replace(/.*\\//gm, '').replaceAll('', '')\r\n    let volume = this.location.replace(/([/].*)/gm, '').replaceAll('', '')\r\n    let dir = this.location\r\n      .replace(volume, '')\r\n      .replace(file, '')\r\n      .replace('/', '/:')\r\n\r\n    let color\r\n    switch (this.color?.toUpperCase()) {\r\n      case '#FF0000':\r\n        color = 0 //red\r\n        break\r\n      case '#FFA500':\r\n        color = 1 //orange\r\n        break\r\n      case '#FFFF00':\r\n        color = 2 //yellow\r\n        break\r\n      case '#008000':\r\n        color = 3 //green\r\n        break\r\n      case '#0000FF':\r\n        color = 4 //blue\r\n        break\r\n      case '#800080':\r\n        color = 5 //violet\r\n        break\r\n      case '#FF00FF':\r\n        color = 6 //magenta\r\n        break\r\n      default:\r\n        color = ''\r\n    }\r\n\r\n    let key\r\n    switch (this.key?.toLowerCase()) {\r\n      case '1d':\r\n        key = 0\r\n        break\r\n      case '8d':\r\n        key = 1\r\n        break\r\n      case '3d':\r\n        key = 2\r\n        break\r\n      case '10d':\r\n        key = 3\r\n        break\r\n      case '5d':\r\n        key = 4\r\n        break\r\n      case '12d':\r\n        key = 5\r\n        break\r\n      case '7d':\r\n        key = 6\r\n        break\r\n      case '2d':\r\n        key = 7\r\n        break\r\n      case '9d':\r\n        key = 8\r\n        break\r\n      case '4d':\r\n        key = 9\r\n        break\r\n      case '11d':\r\n        key = 10\r\n        break\r\n      case '6d':\r\n        key = 11\r\n        break\r\n      case '10m':\r\n        key = 12\r\n        break\r\n      case '5m':\r\n        key = 13\r\n        break\r\n      case '12m':\r\n        key = 14\r\n        break\r\n      case '7m':\r\n        key = 15\r\n        break\r\n      case '2m':\r\n        key = 16\r\n        break\r\n      case '9m':\r\n        key = 17\r\n        break\r\n      case '4m':\r\n        key = 18\r\n        break\r\n      case '11m':\r\n        key = 19\r\n        break\r\n      case '6m':\r\n        key = 20\r\n        break\r\n      case '1m':\r\n        key = 21\r\n        break\r\n      case '8m':\r\n        key = 22\r\n        break\r\n      case '3m':\r\n        key = 23\r\n        break\r\n      default:\r\n        key = ''\r\n    }\r\n\r\n    output += `<ENTRY MODIFIED_DATE=\"${moment(this.modifiedDateTime).format(\r\n      'YYYY/M/D'\r\n    )}\" MODIFIED_TIME=\"${moment(this.modifiedDateTime).diff(\r\n      moment(this.modifiedDateTime).startOf('day'),\r\n      'seconds'\r\n    )}\" AUDIO_ID=\"${this.id}\" TITLE=\"${this.title}\" ARTIST=\"${this.artist}\">`\r\n    output += `<LOCATION DIR=\"${dir}\" FILE=\"${file}\" VOLUME=\"${volume}\" ></LOCATION>`\r\n    output += `<INFO BITRATE=\"${this.bitrate}\" GENRE=\"${this.genre}\" LABEL=\"${\r\n      this.label\r\n    }\" COMMENT=\"${this.comment}\" KEY_LYRICS=\"${\r\n      this.lyrics\r\n    }\" RATING=\"\" REMIXER=\"${this.remixer}\" PRODUCER=\"${this.producer}\" MIX=\"${\r\n      this.mix\r\n    }\" KEY=\"${this.key}\" PLAYTIME=\"${parseInt(\r\n      this.duration\r\n    )}\" PLAYTIME_FLOAT=\"${this.duration}\" RANKING=\"${\r\n      this.rating\r\n    }\" IMPORT_DATE=\"${moment(this.importDateTime).format(\r\n      'YYYY/M/D'\r\n    )}\" RELEASE_DATE=\"${moment(this.releaseDate).format(\r\n      'YYYY/M/D'\r\n    )}\" FILESIZE=\"${this.filesize}\" COLOR=\"${color}\" ></INFO>`\r\n    output += `<ALBUM TRACK=\"${this.trackNumber}\" TITLE=\"${this.album}\"></ALBUM>`\r\n    output += `<MODIFICATION_INFO AUTHOR_TYPE=\"user\"></MODIFICATION_INFO>`\r\n    output += `<TEMPO BPM=\"${this.bpm}\" BPM_QUALITY=\"100.000000\" ></TEMPO>`\r\n    output += `<LOUDNESS PEAK_DB=\"${this.peakDb}\" PERCEIVED_DB=\"${this.perceivedDb}\" ANALYZED_DB=\"${this.analyzedDb}\"></LOUDNESS>`\r\n    output += `<MUSICAL_KEY VALUE=\"${key}\"></MUSICAL_KEY>`\r\n    this.hotCues.map(hotcue => (output += hotcue.exportAsTraktor()))\r\n    output += `<CUE_V2 NAME=\"AutoGrid\" DISPL_ORDER=\"0\" TYPE=\"4\" START=\"${this.gridStart}\"  REPEATS=\"-1\" HOTCUE=\"0\" ></CUE_V2>`\r\n    output += `</ENTRY>`\r\n\r\n    return output\r\n  }\r\n\r\n  exportAsRekordboxPlaylistTrack(newKey = false) {\r\n    return `<TRACK ${attr('Key', newKey ? newKey : this.id)}/>`\r\n  }\r\n\r\n  exportAsTraktorPlaylistTrack(newKey = false) {\r\n    return `<ENTRY><PRIMARYKEY TYPE=\"TRACK\" ${attr(\r\n      'KEY',\r\n      newKey ? newKey : this.location\r\n    )}></PRIMARYKEY></ENTRY>`\r\n  }\r\n}\r\n","D:\\www\\t2rb\\react-electron\\src\\helpers\\createTrackFromXML.js",[],["165","166"],"D:\\www\\t2rb\\react-electron\\src\\context\\example.button.js",[],"D:\\www\\t2rb\\react-electron\\src\\context\\app.context.js",["167","168","169"],"D:\\www\\t2rb\\react-electron\\src\\config\\theme.config.js",[],"D:\\www\\t2rb\\react-electron\\src\\screens\\main.screen.js",[],"D:\\www\\t2rb\\react-electron\\src\\components\\appBar.js",["170","171","172","173"],"D:\\www\\t2rb\\react-electron\\src\\config\\screens.js",[],"D:\\www\\t2rb\\react-electron\\src\\screens\\config.screen.js",["174","175"],"import React from 'react'\r\nimport { Drawer } from '@mui/material'\r\nimport AppContext from '../context/app.context'\r\nimport { screen } from '../config/screens'\r\nimport Box from '@mui/material/Box'\r\nimport TextField from '@mui/material/TextField'\r\nimport AccountCircle from '@mui/icons-material/AccountCircle'\r\nimport { TraktorLogo, RekordboxLogo } from '../logos/logo.js'\r\nimport { config } from '../config/config'\r\n\r\nconst dialog = window.require('electron').remote.dialog\r\n\r\nexport class ConfigScreen extends React.Component {\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({\r\n          traktorFile,\r\n          rekorboxFile,\r\n          activeScreen,\r\n          goToMainScreen,\r\n          setTraktorFile,\r\n          setRekorboxFile\r\n        }) => (\r\n          <Drawer anchor={'bottom'} open={activeScreen === screen.config}>\r\n            <div style={{ width: '100vw', height: '100vh' }}>\r\n              This is config screen\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                <TraktorLogo color=\"white\" size={30} />\r\n                <TextField\r\n                  disabled\r\n                  fullWidth\r\n                  onClick={() => {\r\n                    setTraktorFile(\r\n                      dialog.showOpenDialogSync({\r\n                        properties: ['openFile'],\r\n                        filters: [\r\n                          {\r\n                            name: 'Traktor Collection File',\r\n                            extensions: ['nml']\r\n                          },\r\n                          { name: 'All Files', extensions: ['*'] }\r\n                        ]\r\n                      })\r\n                    )\r\n                  }}\r\n                  value={traktorFile}\r\n                  label=\"Traktor Collection\"\r\n                  variant=\"standard\"\r\n                />\r\n              </Box>\r\n              <br />\r\n              <br />\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                <RekordboxLogo color=\"white\" size={30} />\r\n                <TextField\r\n                  disabled\r\n                  fullWidth\r\n                  onClick={() => {\r\n                    setRekorboxFile(dialog.showSaveDialogSync())\r\n                  }}\r\n                  value={rekorboxFile}\r\n                  label=\"Rekordbox Exported\"\r\n                  variant=\"standard\"\r\n                />\r\n              </Box>\r\n              <button onClick={() => goToMainScreen()}>\r\n                Close Config Screen\r\n              </button>\r\n            </div>\r\n          </Drawer>\r\n        )}\r\n      </AppContext.Consumer>\r\n    )\r\n  }\r\n}\r\nConfigScreen.contextType = AppContext\r\nexport default ConfigScreen\r\n","D:\\www\\t2rb\\react-electron\\src\\screens\\working.screen.js",["176"],"import React from 'react'\r\nimport { Drawer } from '@mui/material'\r\nimport AppContext from '../context/app.context'\r\nimport { screen } from '../config/screens'\r\nimport { Aaaa } from '../App'\r\n\r\nexport class WorkingScreen extends React.Component {\r\n  state = {}\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({\r\n          workingMsg,\r\n          workSteps,\r\n          workDoneSteps,\r\n          activeScreen,\r\n          abortTheMagic\r\n        }) => {\r\n          let percentage = workSteps\r\n            ? `${parseInt((workDoneSteps / workSteps) * 100)}%`\r\n            : '0%'\r\n\r\n          return (\r\n            <Drawer anchor={'bottom'} open={activeScreen === screen.working}>\r\n              <div style={{ width: '100vw', height: '100vh' }}>\r\n                <div>HERE GOES ANIMATION OF THE MAGIC</div>\r\n                <ul>\r\n                  <li>{workingMsg}</li>\r\n                  <li>{percentage}</li>\r\n                </ul>\r\n                <button onClick={() => abortTheMagic('Cancelado pelo usuário')}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </Drawer>\r\n          )\r\n        }}\r\n      </AppContext.Consumer>\r\n    )\r\n  }\r\n}\r\nWorkingScreen.contextType = AppContext\r\nexport default WorkingScreen\r\n","D:\\www\\t2rb\\react-electron\\src\\screens\\workComplete.screen.js",[],"D:\\www\\t2rb\\react-electron\\src\\screens\\workCanceled.screen.js",[],"D:\\www\\t2rb\\react-electron\\src\\screens\\workFail.screen.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\index.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\createTrackFromXML.js",[],["177","178"],"D:\\www\\t2rb\\github\\t2rb\\src\\config\\config.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\getOpenKey.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\getMusicalKey.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\screens\\config.screen.js",["179","180"],{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","severity":1,"message":"186","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":16},{"ruleId":"185","severity":1,"message":"189","line":6,"column":10,"nodeType":"187","messageId":"188","endLine":6,"endColumn":19},{"ruleId":"185","severity":1,"message":"190","line":7,"column":10,"nodeType":"187","messageId":"188","endLine":7,"endColumn":20},{"ruleId":"185","severity":1,"message":"191","line":10,"column":10,"nodeType":"187","messageId":"188","endLine":10,"endColumn":25},{"ruleId":"185","severity":1,"message":"192","line":11,"column":8,"nodeType":"187","messageId":"188","endLine":11,"endColumn":14},{"ruleId":"185","severity":1,"message":"193","line":14,"column":7,"nodeType":"187","messageId":"188","endLine":14,"endColumn":9},{"ruleId":"185","severity":1,"message":"194","line":54,"column":15,"nodeType":"187","messageId":"188","endLine":54,"endColumn":18},{"ruleId":"195","severity":1,"message":"196","line":224,"column":29,"nodeType":"197","messageId":"198","endLine":224,"endColumn":30,"suggestions":"199"},{"ruleId":"195","severity":1,"message":"196","line":224,"column":33,"nodeType":"197","messageId":"198","endLine":224,"endColumn":34,"suggestions":"200"},{"ruleId":"181","replacedBy":"201"},{"ruleId":"183","replacedBy":"202"},{"ruleId":"185","severity":1,"message":"186","line":1,"column":10,"nodeType":"187","messageId":"188","endLine":1,"endColumn":16},{"ruleId":"181","replacedBy":"203"},{"ruleId":"183","replacedBy":"204"},{"ruleId":"185","severity":1,"message":"205","line":7,"column":20,"nodeType":"187","messageId":"188","endLine":7,"endColumn":30},{"ruleId":"195","severity":1,"message":"206","line":283,"column":38,"nodeType":"197","messageId":"198","endLine":283,"endColumn":39,"suggestions":"207"},{"ruleId":"195","severity":1,"message":"208","line":284,"column":40,"nodeType":"197","messageId":"198","endLine":284,"endColumn":41,"suggestions":"209"},{"ruleId":"185","severity":1,"message":"210","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":13},{"ruleId":"185","severity":1,"message":"211","line":8,"column":8,"nodeType":"187","messageId":"188","endLine":8,"endColumn":21},{"ruleId":"185","severity":1,"message":"212","line":9,"column":8,"nodeType":"187","messageId":"188","endLine":9,"endColumn":16},{"ruleId":"185","severity":1,"message":"213","line":10,"column":8,"nodeType":"187","messageId":"188","endLine":10,"endColumn":25},{"ruleId":"185","severity":1,"message":"211","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":21},{"ruleId":"185","severity":1,"message":"214","line":9,"column":10,"nodeType":"187","messageId":"188","endLine":9,"endColumn":16},{"ruleId":"185","severity":1,"message":"215","line":5,"column":10,"nodeType":"187","messageId":"188","endLine":5,"endColumn":14},{"ruleId":"181","replacedBy":"216"},{"ruleId":"183","replacedBy":"217"},{"ruleId":"185","severity":1,"message":"211","line":7,"column":8,"nodeType":"187","messageId":"188","endLine":7,"endColumn":21},{"ruleId":"185","severity":1,"message":"214","line":9,"column":10,"nodeType":"187","messageId":"188","endLine":9,"endColumn":16},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],"no-unused-vars","'HotCue' is defined but never used.","Identifier","unusedVar","'MemoryCue' is defined but never used.","'getOpenKey' is defined but never used.","'convertRGBToHex' is defined but never used.","'moment' is defined but never used.","'fs' is assigned a value but never used.","'aaa' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["220","221"],["222","223"],["218"],["219"],["218"],["219"],"'AlertProps' is defined but never used.","Unnecessary escape character: \\<.",["224","225"],"Unnecessary escape character: \\>.",["226","227"],"'Badge' is defined but never used.","'AccountCircle' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'config' is defined but never used.","'Aaaa' is defined but never used.",["218"],["219"],"no-global-assign","no-unsafe-negation",{"messageId":"228","fix":"229","desc":"230"},{"messageId":"231","fix":"232","desc":"233"},{"messageId":"228","fix":"234","desc":"230"},{"messageId":"231","fix":"235","desc":"233"},{"messageId":"228","fix":"236","desc":"230"},{"messageId":"231","fix":"237","desc":"233"},{"messageId":"228","fix":"238","desc":"230"},{"messageId":"231","fix":"239","desc":"233"},"removeEscape",{"range":"240","text":"241"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"242","text":"243"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"244","text":"241"},{"range":"245","text":"243"},{"range":"246","text":"241"},{"range":"247","text":"243"},{"range":"248","text":"241"},{"range":"249","text":"243"},[6372,6373],"",[6372,6372],"\\",[6376,6377],[6376,6376],[7931,7932],[7931,7931],[7989,7990],[7989,7989]]