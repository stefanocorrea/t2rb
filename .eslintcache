[{"D:\\www\\t2rb\\react-electron\\src\\logos\\logo.js":"1","D:\\www\\t2rb\\react-electron\\src\\App.js":"2","D:\\www\\t2rb\\react-electron\\src\\class\\Library.class.js":"3","D:\\www\\t2rb\\react-electron\\src\\index.js":"4","D:\\www\\t2rb\\react-electron\\src\\config\\config.js":"5","D:\\www\\t2rb\\react-electron\\src\\helpers\\createXmlAttrString.js":"6","D:\\www\\t2rb\\react-electron\\src\\class\\Folder.class.js":"7","D:\\www\\t2rb\\react-electron\\src\\class\\Playlist.class.js":"8","D:\\www\\t2rb\\react-electron\\src\\class\\HotCue.class.js":"9","D:\\www\\t2rb\\react-electron\\src\\class\\MemoryCue.class.js":"10","D:\\www\\t2rb\\react-electron\\src\\helpers\\getOpenKey.js":"11","D:\\www\\t2rb\\react-electron\\src\\helpers\\convertRGBToHex.js":"12","D:\\www\\t2rb\\react-electron\\src\\helpers\\decodeString.js":"13","D:\\www\\t2rb\\react-electron\\src\\helpers\\convertHexToName.js":"14","D:\\www\\t2rb\\react-electron\\src\\helpers\\getMusicalKey.js":"15","D:\\www\\t2rb\\react-electron\\src\\helpers\\convertHexToRGB.js":"16","D:\\www\\t2rb\\react-electron\\src\\class\\Track.class.js":"17","D:\\www\\t2rb\\react-electron\\src\\helpers\\createTrackFromXML.js":"18","D:\\www\\t2rb\\react-electron\\src\\context\\example.button.js":"19","D:\\www\\t2rb\\react-electron\\src\\context\\app.context.js":"20","D:\\www\\t2rb\\react-electron\\src\\config\\theme.config.js":"21","D:\\www\\t2rb\\react-electron\\src\\screens\\main.screen.js":"22","D:\\www\\t2rb\\react-electron\\src\\components\\appBar.js":"23","D:\\www\\t2rb\\react-electron\\src\\config\\screens.js":"24","D:\\www\\t2rb\\react-electron\\src\\screens\\config.screen.js":"25","D:\\www\\t2rb\\react-electron\\src\\screens\\working.screen.js":"26","D:\\www\\t2rb\\react-electron\\src\\screens\\workComplete.screen.js":"27","D:\\www\\t2rb\\react-electron\\src\\screens\\workCanceled.screen.js":"28","D:\\www\\t2rb\\react-electron\\src\\screens\\workFail.screen.js":"29","D:\\www\\t2rb\\github\\t2rb\\src\\index.js":"30","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\createTrackFromXML.js":"31","D:\\www\\t2rb\\github\\t2rb\\src\\config\\config.js":"32","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\getOpenKey.js":"33","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\getMusicalKey.js":"34","D:\\www\\t2rb\\github\\t2rb\\src\\screens\\config.screen.js":"35","D:\\www\\t2rb\\github\\t2rb\\src\\context\\theme.context.js":"36","D:\\www\\t2rb\\github\\t2rb\\src\\config\\screens.js":"37","D:\\www\\t2rb\\github\\t2rb\\src\\components\\appBar.js":"38","D:\\www\\t2rb\\github\\t2rb\\src\\components\\Clickable.js":"39","D:\\www\\t2rb\\github\\t2rb\\src\\components\\AppIconLayout.js":"40","D:\\www\\t2rb\\github\\t2rb\\src\\class\\MemoryCue.class.js":"41","D:\\www\\t2rb\\github\\t2rb\\src\\context\\app.context.js":"42","D:\\www\\t2rb\\github\\t2rb\\src\\class\\Playlist.class.js":"43","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\convertRGBToHex.js":"44","D:\\www\\t2rb\\github\\t2rb\\src\\screens\\workCanceled.screen.js":"45","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\convertHexToRGB.js":"46","D:\\www\\t2rb\\github\\t2rb\\src\\screens\\language.screen.js":"47","D:\\www\\t2rb\\github\\t2rb\\src\\components\\ProgressBar.js":"48","D:\\www\\t2rb\\github\\t2rb\\src\\components\\AppIcon.js":"49","D:\\www\\t2rb\\github\\t2rb\\src\\context\\intl.context.js":"50","D:\\www\\t2rb\\github\\t2rb\\src\\components\\SecondaryScreen.js":"51","D:\\www\\t2rb\\github\\t2rb\\src\\class\\Track.class.js":"52","D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\decodeString.js":"53","D:\\www\\t2rb\\github\\t2rb\\src\\components\\FileField.js":"54","D:\\www\\t2rb\\github\\t2rb\\src\\components\\ScreenTitle.js":"55"},{"size":4726,"mtime":1653094629089,"results":"56","hashOfConfig":"57"},{"size":737,"mtime":1653364760802,"results":"58","hashOfConfig":"57"},{"size":7809,"mtime":1653005449121,"results":"59","hashOfConfig":"57"},{"size":471,"mtime":1653364799143,"results":"60","hashOfConfig":"57"},{"size":1062,"mtime":1653359727823,"results":"61","hashOfConfig":"57"},{"size":219,"mtime":1653007621514,"results":"62","hashOfConfig":"57"},{"size":1236,"mtime":1653007202571,"results":"63","hashOfConfig":"57"},{"size":887,"mtime":1652985779717,"results":"64","hashOfConfig":"57"},{"size":1401,"mtime":1653053733428,"results":"65","hashOfConfig":"57"},{"size":630,"mtime":1653053715162,"results":"66","hashOfConfig":"57"},{"size":1365,"mtime":1652769647012,"results":"67","hashOfConfig":"57"},{"size":188,"mtime":1652427033385,"results":"68","hashOfConfig":"57"},{"size":157,"mtime":1653006877708,"results":"69","hashOfConfig":"57"},{"size":193,"mtime":1652457180712,"results":"70","hashOfConfig":"57"},{"size":1335,"mtime":1652459851340,"results":"71","hashOfConfig":"57"},{"size":300,"mtime":1652460606927,"results":"72","hashOfConfig":"57"},{"size":9156,"mtime":1653007716008,"results":"73","hashOfConfig":"57"},{"size":9235,"mtime":1653053946157,"results":"74","hashOfConfig":"57"},{"size":431,"mtime":1653331837518,"results":"75","hashOfConfig":"57"},{"size":10896,"mtime":1653367326831,"results":"76","hashOfConfig":"57"},{"size":525,"mtime":1653337407963,"results":"77","hashOfConfig":"57"},{"size":537,"mtime":1653363699157,"results":"78","hashOfConfig":"57"},{"size":1588,"mtime":1653343122130,"results":"79","hashOfConfig":"57"},{"size":207,"mtime":1653329992303,"results":"80","hashOfConfig":"57"},{"size":2704,"mtime":1653366418883,"results":"81","hashOfConfig":"57"},{"size":1269,"mtime":1653363517579,"results":"82","hashOfConfig":"57"},{"size":1135,"mtime":1653367720736,"results":"83","hashOfConfig":"57"},{"size":768,"mtime":1653362534704,"results":"84","hashOfConfig":"57"},{"size":752,"mtime":1653362669668,"results":"85","hashOfConfig":"57"},{"size":471,"mtime":1653364799143,"results":"86","hashOfConfig":"87"},{"size":9600,"mtime":1653668816895,"results":"88","hashOfConfig":"89"},{"size":1290,"mtime":1653634710260,"results":"90","hashOfConfig":"89"},{"size":1365,"mtime":1652769647012,"results":"91","hashOfConfig":"89"},{"size":1335,"mtime":1652459851340,"results":"92","hashOfConfig":"89"},{"size":2704,"mtime":1653366418883,"results":"93","hashOfConfig":"87"},{"size":427,"mtime":1653594728859,"results":"94","hashOfConfig":"89"},{"size":208,"mtime":1653518384713,"results":"95","hashOfConfig":"89"},{"size":1881,"mtime":1653628441897,"results":"96","hashOfConfig":"89"},{"size":929,"mtime":1653583845193,"results":"97","hashOfConfig":"89"},{"size":947,"mtime":1653595100851,"results":"98","hashOfConfig":"89"},{"size":630,"mtime":1653053715162,"results":"99","hashOfConfig":"89"},{"size":13814,"mtime":1653634171223,"results":"100","hashOfConfig":"89"},{"size":887,"mtime":1652985779717,"results":"101","hashOfConfig":"89"},{"size":188,"mtime":1652427033385,"results":"102","hashOfConfig":"89"},{"size":1123,"mtime":1653601200626,"results":"103","hashOfConfig":"89"},{"size":300,"mtime":1652460606927,"results":"104","hashOfConfig":"89"},{"size":4397,"mtime":1653634003562,"results":"105","hashOfConfig":"89"},{"size":290,"mtime":1653524550767,"results":"106","hashOfConfig":"89"},{"size":509,"mtime":1653572363636,"results":"107","hashOfConfig":"89"},{"size":2094,"mtime":1653634032871,"results":"108","hashOfConfig":"89"},{"size":2708,"mtime":1653628148919,"results":"109","hashOfConfig":"89"},{"size":9281,"mtime":1653426327386,"results":"110","hashOfConfig":"89"},{"size":157,"mtime":1653006877708,"results":"111","hashOfConfig":"89"},{"size":4134,"mtime":1653600968961,"results":"112","hashOfConfig":"89"},{"size":584,"mtime":1653509371411,"results":"113","hashOfConfig":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1uo61ks",{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"122"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"122"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1k0l082",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"183"},"1yy6wvd",{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"203"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"194"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"225","messages":"226","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"227","messages":"228","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\www\\t2rb\\react-electron\\src\\logos\\logo.js",[],["237","238"],"D:\\www\\t2rb\\react-electron\\src\\App.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\Library.class.js",["239","240","241","242","243","244","245","246","247"],"import XMLParser from 'react-xml-parser'\r\nimport { Folder } from './Folder.class'\r\nimport { Playlist } from './Playlist.class'\r\nimport { Track } from './Track.class'\r\nimport { HotCue } from './HotCue.class'\r\nimport { MemoryCue } from './MemoryCue.class'\r\nimport { getOpenKey } from '../helpers/getOpenKey'\r\nimport { createTrackFromTraktorXML } from '../helpers/createTrackFromXML'\r\nimport { createTrackFromRekordboxXML } from '../helpers/createTrackFromXML'\r\nimport { convertRGBToHex } from '../helpers/convertRGBToHex'\r\nimport moment from 'moment'\r\nimport { decodeString } from '../helpers/decodeString'\r\n\r\nconst fs = window.require('fs').promises\r\n\r\nexport class Library {\r\n  originalLibrary\r\n  origin\r\n\r\n  constructor() {\r\n    this.collection = []\r\n    this.playlists = []\r\n  }\r\n\r\n  recursiveReadTraktorPlaylistNode(node) {\r\n    /* TODO: organize names */\r\n    let a\r\n    switch (node.attributes.TYPE) {\r\n      case 'FOLDER':\r\n        a = new Folder(node.attributes.NAME)\r\n        node.children[0].children.map(subnode => {\r\n          switch (subnode.attributes.TYPE) {\r\n            case 'FOLDER':\r\n              a.addFolder(this.recursiveReadTraktorPlaylistNode(subnode))\r\n              break\r\n            case 'PLAYLIST':\r\n              a.addPlaylist(this.recursiveReadTraktorPlaylistNode(subnode))\r\n              break\r\n            default:\r\n          }\r\n          return true\r\n        })\r\n        break\r\n      case 'PLAYLIST':\r\n        a = new Playlist(node.attributes.NAME)\r\n        node.children[0].children.map(subnode => {\r\n          let location = subnode.children[0].attributes.KEY.replaceAll(\r\n            '/:',\r\n            '/'\r\n          )\r\n          let track = new Track(location)\r\n\r\n          //      console.log(location)\r\n          let aaa = this.getTrackByLocation(location)\r\n          //track.setId(this.getTrackByLocation(location).id)\r\n\r\n          a.addTrack(track)\r\n          return true\r\n        })\r\n        break\r\n      default:\r\n        a = false\r\n    }\r\n\r\n    return a\r\n  }\r\n\r\n  importPlaylistsFromTraktor() {\r\n    let originalPlaylists = this.originalLibrary.getElementsByTagName(\r\n      'PLAYLISTS'\r\n    )\r\n\r\n    let a = []\r\n    originalPlaylists.length > 0 &&\r\n      originalPlaylists[0].children?.map(node =>\r\n        a.push(this.recursiveReadTraktorPlaylistNode(node))\r\n      )\r\n\r\n    this.playlists = a\r\n\r\n    return true\r\n  }\r\n\r\n  importCollectionFromTraktor() {\r\n    this.originalLibrary\r\n      .getElementsByTagName('COLLECTION')[0]\r\n      .getElementsByTagName('ENTRY')\r\n      .map((trackNode, index) => {\r\n        let xmlString = new XMLParser().toString(trackNode)\r\n        let track = createTrackFromTraktorXML(xmlString, index + 1)\r\n\r\n        return this.collection.push(track)\r\n      })\r\n\r\n    //    console.log(a)\r\n  }\r\n\r\n  importPlaylistsFromRekordbox() {\r\n    /* TODO: Read playlists from Rekordbox */\r\n  }\r\n\r\n  importCollectionFromRekordbox() {\r\n    this.originalLibrary\r\n      .getElementsByTagName('COLLECTION')[0]\r\n      .getElementsByTagName('TRACK')\r\n      .map((trackNode, index) => {\r\n        let xmlString = new XMLParser().toString(trackNode)\r\n        let track = createTrackFromRekordboxXML(xmlString, index + 1)\r\n\r\n        return this.collection.push(track)\r\n      })\r\n  }\r\n\r\n  guessOrigin() {\r\n    if (this.originalLibrary.name === 'NML') return (this.origin = 'traktor')\r\n    if (this.originalLibrary.name === 'DJ_PLAYLISTS')\r\n      return (this.origin = 'rekordbox')\r\n  }\r\n\r\n  setOrigin(value) {\r\n    this.origin = value\r\n  }\r\n\r\n  setOriginalLibrary(value) {\r\n    if (!value) return false\r\n    this.originalLibrary = value\r\n    this.setOrigin(this.guessOrigin())\r\n\r\n    return true\r\n  }\r\n\r\n  importPlaylists() {\r\n    if (this.origin === 'traktor') return this.importPlaylistsFromTraktor()\r\n    if (this.origin === 'rekordbox') return this.importPlaylistsFromRekordbox()\r\n  }\r\n\r\n  importCollection() {\r\n    if (this.origin === 'traktor') return this.importCollectionFromTraktor()\r\n    if (this.origin === 'rekordbox') return this.importCollectionFromRekordbox()\r\n  }\r\n\r\n  exportCollectionAsTraktor() {\r\n    if (this.collection.length < 1) return ''\r\n\r\n    return (\r\n      `<COLLECTION ENTRIES=\"${this.collection.length}\">` +\r\n      this.collection.reduce((acum, track) => {\r\n        return acum + track.exportAsTraktor()\r\n      }, '') +\r\n      '</COLLECTION>'\r\n    )\r\n  }\r\n\r\n  exportPlaylistsAsTraktor() {\r\n    if (this.playlists.length < 1) return ''\r\n    let output = ''\r\n    output += `<PLAYLISTS>`\r\n    this.playlists.map(folder => (output += folder.exportAsTraktor()))\r\n    output += `</PLAYLISTS>`\r\n    return output\r\n  }\r\n\r\n  exportCollectionAsRekordbox() {\r\n    if (this.collection.length < 1) return ''\r\n\r\n    return (\r\n      `<COLLECTION Entries=\"${this.collection.length}\">` +\r\n      this.collection.reduce((acum, curr) => {\r\n        return acum + curr.exportAsRekordbox()\r\n      }, '') +\r\n      '</COLLECTION>'\r\n    )\r\n  }\r\n\r\n  exportPlaylistsAsRekordbox() {\r\n    if (this.playlists.length < 1) return ''\r\n    return (\r\n      '<PLAYLISTS>' +\r\n      this.playlists?.reduce((acum, curr) => {\r\n        return acum + curr.exportAsRekordbox()\r\n      }, '') +\r\n      '</PLAYLISTS>'\r\n    )\r\n  }\r\n\r\n  exportAsTraktor() {\r\n    let output = '<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>'\r\n    output += '<NML VERSION=\"19\">'\r\n    output +=\r\n      '<HEAD COMPANY=\"www.native-instruments.com\" PROGRAM=\"Traktor\"></HEAD>'\r\n    output += this.exportCollectionAsTraktor()\r\n    output += this.exportPlaylistsAsTraktor()\r\n    output += '</NML>'\r\n    return output\r\n  }\r\n\r\n  exportAsRekordbox() {\r\n    let output = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>'\r\n    output += '<DJ_PLAYLISTS Version=\"1.0.0\">'\r\n    output +=\r\n      '<PRODUCT Name=\"rekordbox\" Version=\"6.6.3\" Company=\"AlphaTheta\" />'\r\n    output += this.exportCollectionAsRekordbox()\r\n    output += this.exportPlaylistsAsRekordbox()\r\n    output += '</DJ_PLAYLISTS>'\r\n\r\n    return output\r\n  }\r\n\r\n  exportToFile(program, location) {\r\n    // try {\r\n    //   fs.writeFileSync(location, this.export(program), \"utf-8\");\r\n    //   alert(\"salvei\");\r\n    // } catch (e) {\r\n    //   alert(\"Failed to save the file !\");\r\n    // }\r\n  }\r\n\r\n  export(program) {\r\n    if (program === 'traktor') return this.exportAsTraktor()\r\n    if (program === 'rekordbox') return this.exportAsRekordbox()\r\n  }\r\n\r\n  importLibrary(xmlLibraryString) {\r\n    const regex = /AUDIO_ID=\\\"[^\\\"]*\"/gm\r\n    let xml = new XMLParser().parseFromString(\r\n      xmlLibraryString.replace(regex, ``)\r\n    )\r\n\r\n    this.setOriginalLibrary(xml)\r\n\r\n    this.importCollection()\r\n    this.importPlaylists()\r\n\r\n    return true\r\n  }\r\n\r\n  // async importLibraryFile(xmlLibraryLocation) {\r\n  //   /* TODO: extrat xml string from file */\r\n  //   let xmlLibraryString = await fs.readFile(xmlLibraryLocation, 'utf-8')\r\n\r\n  //   this.importLibrary(xmlLibraryString)\r\n\r\n  //   return true\r\n  // }\r\n\r\n  setCollection(newCollection) {\r\n    this.collection = newCollection\r\n  }\r\n  setPlaylists(newPlaylists) {\r\n    this.playlists = newPlaylists\r\n    this.reSetTracksIdsInPlaylists()\r\n  }\r\n\r\n  reSetTracksIdsInPlaylists() {\r\n    this.playlists.map(node => {\r\n      return this.recursiveReSetTracksIdsInPlaylists(node)\r\n    })\r\n  }\r\n\r\n  getTrackByLocation(fileLocation) {\r\n    let trackFound = this.collection.reduce((acum, track) => {\r\n      return !acum && track.location === decodeString(fileLocation)\r\n        ? track\r\n        : acum\r\n    }, false)\r\n    return trackFound\r\n  }\r\n\r\n  recursiveReSetTracksIdsInPlaylists(node) {\r\n    node.playlists.map(playlist =>\r\n      playlist.tracks.map(track => {\r\n        let trackInCollection = this.getTrackByLocation(track.location)\r\n        return trackInCollection && track.setId(trackInCollection.id)\r\n      })\r\n    )\r\n\r\n    node.folders.map(node => this.recursiveReSetTracksIdsInPlaylists(node))\r\n  }\r\n}\r\n",["248","249"],"D:\\www\\t2rb\\react-electron\\src\\index.js",[],"D:\\www\\t2rb\\react-electron\\src\\config\\config.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\createXmlAttrString.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\Folder.class.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\Playlist.class.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\HotCue.class.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\MemoryCue.class.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\getOpenKey.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\convertRGBToHex.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\decodeString.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\convertHexToName.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\getMusicalKey.js",[],"D:\\www\\t2rb\\react-electron\\src\\helpers\\convertHexToRGB.js",[],"D:\\www\\t2rb\\react-electron\\src\\class\\Track.class.js",["250"],"import { HotCue } from './HotCue.class'\r\nimport { convertHexToName } from '../helpers/convertHexToName'\r\nimport moment from 'moment'\r\nimport { getMusicalKey } from '../helpers/getMusicalKey'\r\nimport { attr } from '../helpers/createXmlAttrString.js'\r\n\r\nexport class Track {\r\n  id\r\n  title\r\n  artist\r\n  album\r\n  location\r\n  genre\r\n  type\r\n  size\r\n  duration\r\n  trackNumber\r\n  bpm\r\n  peakDb\r\n  perceivedDb\r\n  analyzedDb\r\n  modifiedDateTime\r\n  producer\r\n  catalog\r\n  importDateTime\r\n  lastPlayedDateTime\r\n  releaseDate\r\n  bitRate\r\n  md5\r\n  comments\r\n  playCount\r\n  rating\r\n  sampleRate\r\n  remixer\r\n  key\r\n  label\r\n  mix\r\n  color\r\n  hotCues\r\n  memoryCues\r\n  gridStart\r\n  modificationDateTime\r\n  originalXml\r\n\r\n  constructor(location) {\r\n    this.location = location\r\n  }\r\n\r\n  setId(val) {\r\n    if (val) this.id = val\r\n  }\r\n  setTitle(val) {\r\n    if (val) this.title = val\r\n  }\r\n  setArtist(val) {\r\n    if (val) this.artist = val\r\n  }\r\n  setAlbum(val) {\r\n    if (val) this.album = val\r\n  }\r\n  setLocation(val) {\r\n    if (val) this.location = val\r\n  }\r\n  setGenre(val) {\r\n    if (val) this.genre = val\r\n  }\r\n  setType(val) {\r\n    if (val) this.type = val.replace(' File', '').toLowerCase()\r\n  }\r\n  setSize(val) {\r\n    if (val) this.size = parseFloat(val)\r\n  }\r\n  setDuration(val) {\r\n    if (val) this.duration = parseFloat(val)\r\n  }\r\n  setTrackNumber(val) {\r\n    if (val) this.trackNumber = val\r\n  }\r\n  setBpm(val) {\r\n    if (val) this.bpm = parseFloat(val)\r\n  }\r\n  setPeakDb(val) {\r\n    if (val) this.peakDb = val\r\n  }\r\n  setPerceivedDb(val) {\r\n    if (val) this.perceivedDb = val\r\n  }\r\n  setAnalyzedDb(val) {\r\n    if (val) this.analyzedDb = val\r\n  }\r\n  setModifiedDateTime(val) {\r\n    if (val) this.modificationDateTime = val\r\n  }\r\n  setProducer(val) {\r\n    if (val) this.producer = val\r\n  }\r\n  setCatalog(val) {\r\n    if (val) this.catalog = val\r\n  }\r\n  setImportDateTime(val) {\r\n    if (val) this.importDateTime = val\r\n  }\r\n  setLastPlayedDateTime(val) {\r\n    if (val) this.lastPlayedDateTime = val\r\n  }\r\n  setReleaseDate(val) {\r\n    if (val) this.releaseDate = val\r\n  }\r\n  setBitRate(val) {\r\n    if (val) this.bitRate = val\r\n  }\r\n  setMd5(val) {\r\n    if (val) this.md5 = val\r\n  }\r\n  setComments(val) {\r\n    if (val) this.comments = val\r\n  }\r\n  setPlayCount(val) {\r\n    if (val) this.playCount = parseInt(val)\r\n  }\r\n  setRating(val) {\r\n    if (val) this.rating = parseInt(val)\r\n  }\r\n  setSampleRate(val) {\r\n    if (val) this.sampleRate = val\r\n  }\r\n  setRemixer(val) {\r\n    if (val) this.remixer = val\r\n  }\r\n  setKey(val) {\r\n    if (val) this.key = val\r\n  }\r\n  setLabel(val) {\r\n    if (val) this.label = val\r\n  }\r\n  setMix(val) {\r\n    if (val) this.mix = val\r\n  }\r\n  setColor(val) {\r\n    if (val) this.color = val\r\n  }\r\n  setHotCues(val) {\r\n    if (val) this.hotCues = val\r\n  }\r\n  setMemoryCues(val) {\r\n    if (val) this.memoryCues = val\r\n  }\r\n\r\n  setOriginalXml(val) {\r\n    if (val) this.originalXml = val\r\n  }\r\n\r\n  setGridStart(val) {\r\n    if (val) this.gridStart = parseFloat(val)\r\n  }\r\n\r\n  getLocation() {\r\n    return this.location\r\n  }\r\n\r\n  getId() {\r\n    return this.id\r\n  }\r\n\r\n  exportAsRekordbox() {\r\n    return (\r\n      `<TRACK ${attr('TrackID', this.id)} ${attr('Name', this.title)} \r\n          ${attr('Artist', this.artist)} ${attr(\r\n        'Composer',\r\n        this.producer\r\n      )} ${attr('Album', this.album)} ${attr(\r\n        'Grouping',\r\n        convertHexToName(this.color)\r\n      )}  \r\n         ${attr('Genre', this.genre)} ${attr(\r\n        'Kind',\r\n        this.type.toUpperCase() + ' File'\r\n      )} ${attr('Size', this.size)} ${attr('TotalTime', this.duration / 1000)} \r\n          ${attr('DiscNumber', this.catalog)} ${attr(\r\n        'TrackNumber',\r\n        this.trackNumber\r\n      )} ${attr('Year', moment(this.releaseDate).format('YYYY'))} ${attr(\r\n        'AverageBpm',\r\n        this.bpm\r\n      )} ${attr(\r\n        'DateAdded',\r\n        this.importDateTime\r\n          ? moment(this.importDateTime).format('YYYY-MM-DD')\r\n          : null\r\n      )} ${attr('BitRate', this.bitRate / 1000)} ${attr(\r\n        'SampleRate',\r\n        this.sampleRate / 1000\r\n      )} ${attr('Comments', this.comments)}\r\n         ${attr('PlayCount', this.playCount)} ${attr(\r\n        'Rating',\r\n        this.rating\r\n      )} ${attr('Location', 'file://localhost/' + this.location)}\r\n          ${attr('Remixer', this.remixer)} ${attr(\r\n        'Tonality',\r\n        getMusicalKey(this.key)\r\n      )} ${attr('Label', this.label)} ${attr('Mix', this.mix)} ${attr(\r\n        'Colour',\r\n        this.color?.replace('#', '0x')\r\n      )}>` +\r\n      `<TEMPO Inizio=\"${this.gridStart}\" Bpm=\"${this.bpm}\" Metro=\"4/4\" Battito=\"1\" />` +\r\n      (this.hotCues.length > 0 &&\r\n        this.hotCues.reduce((acum, curr) => {\r\n          return acum + curr.exportAsRekordbox()\r\n        }, '')) +\r\n      (this.memoryCues.length > 0 &&\r\n        this.memoryCues.reduce((acum, curr) => {\r\n          return acum + curr.exportAsRekordbox()\r\n        }, '')) +\r\n      '</TRACK>'\r\n    )\r\n  }\r\n\r\n  exportAsTraktor() {\r\n    let output = ''\r\n\r\n    let file = this.location.replace(/.*\\//gm, '').replaceAll('', '')\r\n    let volume = this.location.replace(/([/].*)/gm, '').replaceAll('', '')\r\n    let dir = this.location\r\n      .replace(volume, '')\r\n      .replace(file, '')\r\n      .replace('/', '/:')\r\n\r\n    let color\r\n    switch (this.color?.toUpperCase()) {\r\n      case '#FF0000':\r\n        color = 0 //red\r\n        break\r\n      case '#FFA500':\r\n        color = 1 //orange\r\n        break\r\n      case '#FFFF00':\r\n        color = 2 //yellow\r\n        break\r\n      case '#008000':\r\n        color = 3 //green\r\n        break\r\n      case '#0000FF':\r\n        color = 4 //blue\r\n        break\r\n      case '#800080':\r\n        color = 5 //violet\r\n        break\r\n      case '#FF00FF':\r\n        color = 6 //magenta\r\n        break\r\n      default:\r\n        color = ''\r\n    }\r\n\r\n    let key\r\n    switch (this.key?.toLowerCase()) {\r\n      case '1d':\r\n        key = 0\r\n        break\r\n      case '8d':\r\n        key = 1\r\n        break\r\n      case '3d':\r\n        key = 2\r\n        break\r\n      case '10d':\r\n        key = 3\r\n        break\r\n      case '5d':\r\n        key = 4\r\n        break\r\n      case '12d':\r\n        key = 5\r\n        break\r\n      case '7d':\r\n        key = 6\r\n        break\r\n      case '2d':\r\n        key = 7\r\n        break\r\n      case '9d':\r\n        key = 8\r\n        break\r\n      case '4d':\r\n        key = 9\r\n        break\r\n      case '11d':\r\n        key = 10\r\n        break\r\n      case '6d':\r\n        key = 11\r\n        break\r\n      case '10m':\r\n        key = 12\r\n        break\r\n      case '5m':\r\n        key = 13\r\n        break\r\n      case '12m':\r\n        key = 14\r\n        break\r\n      case '7m':\r\n        key = 15\r\n        break\r\n      case '2m':\r\n        key = 16\r\n        break\r\n      case '9m':\r\n        key = 17\r\n        break\r\n      case '4m':\r\n        key = 18\r\n        break\r\n      case '11m':\r\n        key = 19\r\n        break\r\n      case '6m':\r\n        key = 20\r\n        break\r\n      case '1m':\r\n        key = 21\r\n        break\r\n      case '8m':\r\n        key = 22\r\n        break\r\n      case '3m':\r\n        key = 23\r\n        break\r\n      default:\r\n        key = ''\r\n    }\r\n\r\n    output += `<ENTRY MODIFIED_DATE=\"${moment(this.modifiedDateTime).format(\r\n      'YYYY/M/D'\r\n    )}\" MODIFIED_TIME=\"${moment(this.modifiedDateTime).diff(\r\n      moment(this.modifiedDateTime).startOf('day'),\r\n      'seconds'\r\n    )}\" AUDIO_ID=\"${this.id}\" TITLE=\"${this.title}\" ARTIST=\"${this.artist}\">`\r\n    output += `<LOCATION DIR=\"${dir}\" FILE=\"${file}\" VOLUME=\"${volume}\" ></LOCATION>`\r\n    output += `<INFO BITRATE=\"${this.bitrate}\" GENRE=\"${this.genre}\" LABEL=\"${\r\n      this.label\r\n    }\" COMMENT=\"${this.comment}\" KEY_LYRICS=\"${\r\n      this.lyrics\r\n    }\" RATING=\"\" REMIXER=\"${this.remixer}\" PRODUCER=\"${this.producer}\" MIX=\"${\r\n      this.mix\r\n    }\" KEY=\"${this.key}\" PLAYTIME=\"${parseInt(\r\n      this.duration\r\n    )}\" PLAYTIME_FLOAT=\"${this.duration}\" RANKING=\"${\r\n      this.rating\r\n    }\" IMPORT_DATE=\"${moment(this.importDateTime).format(\r\n      'YYYY/M/D'\r\n    )}\" RELEASE_DATE=\"${moment(this.releaseDate).format(\r\n      'YYYY/M/D'\r\n    )}\" FILESIZE=\"${this.filesize}\" COLOR=\"${color}\" ></INFO>`\r\n    output += `<ALBUM TRACK=\"${this.trackNumber}\" TITLE=\"${this.album}\"></ALBUM>`\r\n    output += `<MODIFICATION_INFO AUTHOR_TYPE=\"user\"></MODIFICATION_INFO>`\r\n    output += `<TEMPO BPM=\"${this.bpm}\" BPM_QUALITY=\"100.000000\" ></TEMPO>`\r\n    output += `<LOUDNESS PEAK_DB=\"${this.peakDb}\" PERCEIVED_DB=\"${this.perceivedDb}\" ANALYZED_DB=\"${this.analyzedDb}\"></LOUDNESS>`\r\n    output += `<MUSICAL_KEY VALUE=\"${key}\"></MUSICAL_KEY>`\r\n    this.hotCues.map(hotcue => (output += hotcue.exportAsTraktor()))\r\n    output += `<CUE_V2 NAME=\"AutoGrid\" DISPL_ORDER=\"0\" TYPE=\"4\" START=\"${this.gridStart}\"  REPEATS=\"-1\" HOTCUE=\"0\" ></CUE_V2>`\r\n    output += `</ENTRY>`\r\n\r\n    return output\r\n  }\r\n\r\n  exportAsRekordboxPlaylistTrack(newKey = false) {\r\n    return `<TRACK ${attr('Key', newKey ? newKey : this.id)}/>`\r\n  }\r\n\r\n  exportAsTraktorPlaylistTrack(newKey = false) {\r\n    return `<ENTRY><PRIMARYKEY TYPE=\"TRACK\" ${attr(\r\n      'KEY',\r\n      newKey ? newKey : this.location\r\n    )}></PRIMARYKEY></ENTRY>`\r\n  }\r\n}\r\n","D:\\www\\t2rb\\react-electron\\src\\helpers\\createTrackFromXML.js",[],["251","252"],"D:\\www\\t2rb\\react-electron\\src\\context\\example.button.js",[],"D:\\www\\t2rb\\react-electron\\src\\context\\app.context.js",["253","254","255"],"D:\\www\\t2rb\\react-electron\\src\\config\\theme.config.js",[],"D:\\www\\t2rb\\react-electron\\src\\screens\\main.screen.js",[],"D:\\www\\t2rb\\react-electron\\src\\components\\appBar.js",["256","257","258","259"],"D:\\www\\t2rb\\react-electron\\src\\config\\screens.js",[],"D:\\www\\t2rb\\react-electron\\src\\screens\\config.screen.js",["260","261"],"import React from 'react'\r\nimport { Drawer } from '@mui/material'\r\nimport AppContext from '../context/app.context'\r\nimport { screen } from '../config/screens'\r\nimport Box from '@mui/material/Box'\r\nimport TextField from '@mui/material/TextField'\r\nimport AccountCircle from '@mui/icons-material/AccountCircle'\r\nimport { TraktorLogo, RekordboxLogo } from '../logos/logo.js'\r\nimport { config } from '../config/config'\r\n\r\nconst dialog = window.require('electron').remote.dialog\r\n\r\nexport class ConfigScreen extends React.Component {\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({\r\n          traktorFile,\r\n          rekorboxFile,\r\n          activeScreen,\r\n          goToMainScreen,\r\n          setTraktorFile,\r\n          setRekorboxFile\r\n        }) => (\r\n          <Drawer anchor={'bottom'} open={activeScreen === screen.config}>\r\n            <div style={{ width: '100vw', height: '100vh' }}>\r\n              This is config screen\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                <TraktorLogo color=\"white\" size={30} />\r\n                <TextField\r\n                  disabled\r\n                  fullWidth\r\n                  onClick={() => {\r\n                    setTraktorFile(\r\n                      dialog.showOpenDialogSync({\r\n                        properties: ['openFile'],\r\n                        filters: [\r\n                          {\r\n                            name: 'Traktor Collection File',\r\n                            extensions: ['nml']\r\n                          },\r\n                          { name: 'All Files', extensions: ['*'] }\r\n                        ]\r\n                      })\r\n                    )\r\n                  }}\r\n                  value={traktorFile}\r\n                  label=\"Traktor Collection\"\r\n                  variant=\"standard\"\r\n                />\r\n              </Box>\r\n              <br />\r\n              <br />\r\n              <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                <RekordboxLogo color=\"white\" size={30} />\r\n                <TextField\r\n                  disabled\r\n                  fullWidth\r\n                  onClick={() => {\r\n                    setRekorboxFile(dialog.showSaveDialogSync())\r\n                  }}\r\n                  value={rekorboxFile}\r\n                  label=\"Rekordbox Exported\"\r\n                  variant=\"standard\"\r\n                />\r\n              </Box>\r\n              <button onClick={() => goToMainScreen()}>\r\n                Close Config Screen\r\n              </button>\r\n            </div>\r\n          </Drawer>\r\n        )}\r\n      </AppContext.Consumer>\r\n    )\r\n  }\r\n}\r\nConfigScreen.contextType = AppContext\r\nexport default ConfigScreen\r\n","D:\\www\\t2rb\\react-electron\\src\\screens\\working.screen.js",["262"],"import React from 'react'\r\nimport { Drawer } from '@mui/material'\r\nimport AppContext from '../context/app.context'\r\nimport { screen } from '../config/screens'\r\nimport { Aaaa } from '../App'\r\n\r\nexport class WorkingScreen extends React.Component {\r\n  state = {}\r\n\r\n  render() {\r\n    return (\r\n      <AppContext.Consumer>\r\n        {({\r\n          workingMsg,\r\n          workSteps,\r\n          workDoneSteps,\r\n          activeScreen,\r\n          abortTheMagic\r\n        }) => {\r\n          let percentage = workSteps\r\n            ? `${parseInt((workDoneSteps / workSteps) * 100)}%`\r\n            : '0%'\r\n\r\n          return (\r\n            <Drawer anchor={'bottom'} open={activeScreen === screen.working}>\r\n              <div style={{ width: '100vw', height: '100vh' }}>\r\n                <div>HERE GOES ANIMATION OF THE MAGIC</div>\r\n                <ul>\r\n                  <li>{workingMsg}</li>\r\n                  <li>{percentage}</li>\r\n                </ul>\r\n                <button onClick={() => abortTheMagic('Cancelado pelo usuário')}>\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </Drawer>\r\n          )\r\n        }}\r\n      </AppContext.Consumer>\r\n    )\r\n  }\r\n}\r\nWorkingScreen.contextType = AppContext\r\nexport default WorkingScreen\r\n","D:\\www\\t2rb\\react-electron\\src\\screens\\workComplete.screen.js",[],"D:\\www\\t2rb\\react-electron\\src\\screens\\workCanceled.screen.js",[],"D:\\www\\t2rb\\react-electron\\src\\screens\\workFail.screen.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\index.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\createTrackFromXML.js",[],["263","264"],"D:\\www\\t2rb\\github\\t2rb\\src\\config\\config.js",["265"],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\getOpenKey.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\getMusicalKey.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\screens\\config.screen.js",["266","267"],"D:\\www\\t2rb\\github\\t2rb\\src\\context\\theme.context.js",[],["268","269"],"D:\\www\\t2rb\\github\\t2rb\\src\\config\\screens.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\components\\appBar.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\components\\Clickable.js",["270","271"],"D:\\www\\t2rb\\github\\t2rb\\src\\components\\AppIconLayout.js",[],["272","273"],"D:\\www\\t2rb\\github\\t2rb\\src\\class\\MemoryCue.class.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\context\\app.context.js",["274","275","276","277","278"],"import React, { createContext } from 'react'\r\nimport { screen } from '../config/screens.js'\r\nimport { config } from '../config/config.js'\r\nimport { Library } from '../class/Library.class.js'\r\nimport { createTrackFromRekordboxXML } from '..//helpers/createTrackFromXML.js'\r\nimport { IntlContext } from '../context/intl.context'\r\nimport { FormattedMessage, injectIntl } from 'react-intl'\r\nimport { IntlProvider, useIntl } from 'react-intl'\r\n\r\nimport moment from 'moment'\r\n\r\nconst fs = window.require('fs')\r\nconst { exec } = window.require('child_process')\r\nexport const AppContext = createContext({})\r\nconst path = window.require('path')\r\nconst tempDir = config.get('tempDir').replace(/\\\\/g, '/')\r\nconst tempTrackNmlLocation = path\r\n  .join(tempDir, 'TraktorSingleEntry.nml')\r\n  .replace(/\\\\/g, '/')\r\nconst tempTrackDjDataConverterLocation = path\r\n  .join(tempDir, 'rekordbox.xml')\r\n  .replace(/\\\\/g, '/')\r\n\r\nconst djDataConverterLocation = config\r\n  .get('djDataConverter')\r\n  .replace(/\\\\/g, '/')\r\n\r\nexport class App extends React.Component {\r\n  componentDidMount() {\r\n    this.setTraktorFile(config.get('traktor'))\r\n    this.setRekordboxFile(config.get('rekordbox'))\r\n  }\r\n\r\n  exampleToggleStatus = e => {\r\n    this.setState({ exampleStatus: e })\r\n  }\r\n\r\n  setScreen = screen => {\r\n    this.setState({ activeScreen: screen })\r\n  }\r\n\r\n  validateTraktorFile = () => {\r\n    let isValid = true\r\n    let invalidMsg = ''\r\n\r\n    if (!/.nml$/gims.exec(this.state.traktorFile)) {\r\n      isValid = false\r\n      invalidMsg = 'config.fields.traktor.file.invalid-file'\r\n    }\r\n\r\n    /* Validade if the NML file content is valid */\r\n    if (false) {\r\n    }\r\n\r\n    this.setState({\r\n      validTraktorFile: isValid,\r\n      descriptionInvalidTraktorFile: invalidMsg\r\n    })\r\n    this.configValid()\r\n  }\r\n\r\n  validateRekordboxFile = () => {\r\n    let isValid = true\r\n    let invalidMsg = ''\r\n\r\n    if (!/.xml$/gims.exec(this.state.rekordboxFile)) {\r\n      isValid = false\r\n      invalidMsg = 'config.fields.rekordbox.file.invalid-file'\r\n    }\r\n\r\n    /* Validade if the NML file content is valid */\r\n    if (false) {\r\n    }\r\n\r\n    /* TODO validade rekordbox file */\r\n    this.setState({\r\n      validRekordboxFile: isValid,\r\n      descriptionInvalidRekordboxFile: invalidMsg\r\n    })\r\n    this.configValid()\r\n  }\r\n\r\n  setTraktorFile = async location => {\r\n    if (!location) return this.validateTraktorFile()\r\n\r\n    let newLocationName = location.toString().replace(/\\\\/g, '/')\r\n\r\n    config.set('traktor', newLocationName)\r\n    await this.setState({\r\n      traktorFile: newLocationName\r\n    })\r\n\r\n    this.validateTraktorFile()\r\n  }\r\n\r\n  setRekordboxFile = async location => {\r\n    if (!location) return this.validateRekordboxFile()\r\n    let newLocationName = location.replace(/\\\\/g, '/')\r\n\r\n    config.set('rekordbox', newLocationName)\r\n    await this.setState({\r\n      rekordboxFile: newLocationName\r\n    })\r\n\r\n    this.validateRekordboxFile()\r\n  }\r\n\r\n  setReadyToWork = boolean => {\r\n    this.setState({ readyToWork: boolean })\r\n  }\r\n\r\n  setWorkingStatus = boolean => {\r\n    this.setState({ workingStatus: boolean })\r\n  }\r\n\r\n  setWorkingMsg = msgId => {\r\n    this.setState({ workingMsg: msgId })\r\n  }\r\n\r\n  setWorkingTrack = string => {\r\n    this.setState({ workingTrack: string })\r\n  }\r\n\r\n  addTrackToConvert = trackObject => {\r\n    this.setState({\r\n      tracksToConvert: [...this.state.tracksToConvert, trackObject]\r\n    })\r\n  }\r\n\r\n  addConvertedTracks = trackObject => {\r\n    this.setState({\r\n      convertedTracks: [...this.state.convertedTracks, trackObject]\r\n    })\r\n  }\r\n\r\n  addPlaylistToConvert = playlistObject => {\r\n    this.setState({\r\n      playlistToConvert: [...this.state.playlistToConvert, playlistObject]\r\n    })\r\n  }\r\n\r\n  addConvertedPlaylist = playlistObject => {\r\n    this.setState({\r\n      convertedPlaylist: [...this.state.convertedPlaylist, playlistObject]\r\n    })\r\n  }\r\n\r\n  addWorkSteps = () => {\r\n    this.setState({\r\n      workSteps: this.state.workSteps + 1\r\n    })\r\n  }\r\n\r\n  addWorkDoneSteps = async () => {\r\n    await this.setState({\r\n      workDoneSteps: this.state.workDoneSteps + 1\r\n    })\r\n  }\r\n\r\n  addNotConvertedTracks = (trackObject, reason) => {\r\n    this.setState({\r\n      notConvertedTracks: [\r\n        ...this.state.notConvertedTracks,\r\n        { track: trackObject, reason: reason }\r\n      ]\r\n    })\r\n  }\r\n\r\n  addNotConvertedPlaylists = playlistObject => {\r\n    this.setState({\r\n      notConvertedPlaylists: [\r\n        ...this.state.notConvertedPlaylists,\r\n        playlistObject\r\n      ]\r\n    })\r\n  }\r\n\r\n  resetWorkInfos = () => {\r\n    this.setState({\r\n      tracksToConvert: [],\r\n      convertedTracks: [],\r\n      playlistToConvert: [],\r\n      convertedPlaylist: [],\r\n      workSteps: 0,\r\n      workDoneSteps: 0,\r\n      notConvertedTracks: [],\r\n      notConvertedPlaylists: []\r\n    })\r\n\r\n    this.setWorkingStatus(true)\r\n  }\r\n\r\n  doTheMagic = () => {\r\n    this.setScreen(screen.working)\r\n    this.setWorkingMsg('preparing-to-start')\r\n    this.resetWorkInfos()\r\n    this.setWorkingStatus(true)\r\n\r\n    this.setState({\r\n      // startDateTime: moment(),\r\n      isPreparing: true\r\n    })\r\n    setTimeout(() => {\r\n      this.convertTracks()\r\n    }, 500)\r\n  }\r\n\r\n  abortTheMagic = msgId => {\r\n    this.setScreen(screen.workCanceled)\r\n\r\n    this.setWorkingStatus(false)\r\n    this.setWorkingMsg(msgId)\r\n  }\r\n\r\n  workInPlaylists = () => {\r\n    let library = this.state.library\r\n\r\n    library.setCollection(this.state.convertedTracks)\r\n    library.setPlaylists(this.state.library.playlists)\r\n    library.reSetTracksIdsInPlaylists()\r\n\r\n    this.addWorkDoneSteps()\r\n\r\n    this.setState({\r\n      library: library\r\n    })\r\n    return this.exportEverythingToRekordboxFile()\r\n  }\r\n\r\n  goToMainScreen = () => {\r\n    this.resetWorkInfos()\r\n    this.setScreen(screen.main)\r\n  }\r\n\r\n  endConvert = () => {\r\n    this.setState({\r\n      finishDateTime: moment(),\r\n      elapsedTimeSeconds: moment().diff(this.state.startDateTime, 'seconds')\r\n    })\r\n    this.setWorkingMsg('process-completed')\r\n\r\n    setTimeout(() => {\r\n      this.setScreen(screen.workComplete)\r\n    }, 1000)\r\n\r\n    return true\r\n  }\r\n\r\n  exportEverythingToRekordboxFile = async () => {\r\n    await fs.writeFileSync(\r\n      this.state.rekordboxFile.replace(/\\\\/g, '/'),\r\n      this.state.library.export('rekordbox')\r\n    )\r\n    this.addWorkDoneSteps()\r\n    this.endConvert()\r\n  }\r\n\r\n  async convertTracks() {\r\n    let traktorFile = this.state.traktorFile.replace(/\\\\/g, '/')\r\n    let traktor = new Library()\r\n\r\n    let xmlLibraryString = fs.readFileSync(traktorFile, 'utf-8')\r\n    traktor.importLibrary(xmlLibraryString)\r\n    if (!traktor) return this.abortTheMagic('invalid-traktor-file')\r\n\r\n    /* add step of work for every track. Since tracks takes long to convert */\r\n    traktor.collection.map(() => this.addWorkSteps())\r\n\r\n    /* add a single step for all playlists. Since playlists is converted very fast */\r\n    this.addWorkSteps()\r\n\r\n    /* add a single step for export the result. */\r\n    this.addWorkSteps()\r\n\r\n    this.setState({\r\n      tracksToConvert: traktor.collection,\r\n      library: traktor,\r\n      workStartDateTime: moment()\r\n    })\r\n\r\n    if (!fs.existsSync(tempDir)) {\r\n      fs.mkdirSync(tempDir)\r\n    }\r\n\r\n    if (traktor.collection.length) {\r\n      this.setState({\r\n        startDateTime: moment(),\r\n        isPreparing: false\r\n      })\r\n      this.recursiveConvertMusicIndex(0)\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  recursiveConvertMusicIndex = index => {\r\n    this.setState({\r\n      elapsedTimeSeconds: moment().diff(this.state.startDateTime, 'seconds')\r\n    })\r\n    if (!this.state.workingStatus) return\r\n\r\n    if (index > this.state.tracksToConvert.length - 1)\r\n      return this.workInPlaylists()\r\n\r\n    let nextIndex = index + 1\r\n    let track = this.state.tracksToConvert[index]\r\n    this.setWorkingMsg(false)\r\n    this.setWorkingTrack(\r\n      track.title\r\n        ? `${track.artist ? track.artist + ' - ' : ''}${track.title}`\r\n        : track.location.replace(/.*\\//gims, '')\r\n    )\r\n\r\n    fs.readFile(track.location, 'utf-8', async error => {\r\n      if (error) {\r\n        this.addWorkDoneSteps()\r\n\r\n        this.addNotConvertedTracks(\r\n          track,\r\n          'not-converted.tracks.reasons.not-found'\r\n        )\r\n        this.recursiveConvertMusicIndex(nextIndex)\r\n      } else {\r\n        let tempTrackNmlContent = `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><NML VERSION=\"19\"><HEAD COMPANY=\"www.native-instruments.com\" PROGRAM=\"Traktor\"></HEAD><COLLECTION Entries=\"1\">${track.originalXml}</COLLECTION></NML>`\r\n\r\n        fs.writeFile(\r\n          tempTrackNmlLocation,\r\n          tempTrackNmlContent,\r\n          (error, data) => {\r\n            if (error) {\r\n              this.addWorkDoneSteps()\r\n              this.addNotConvertedTracks(\r\n                track,\r\n                'not-converted.tracks.reasons.analysis'\r\n              )\r\n              this.recursiveConvertMusicIndex(nextIndex)\r\n            } else {\r\n              let cli = `cd \"${tempDir}\" && \"${djDataConverterLocation}\" \"${tempTrackNmlLocation}\"`\r\n              exec(cli, (error, stdout, stderr) => {\r\n                if (error) {\r\n                  this.addWorkDoneSteps()\r\n                  this.addNotConvertedTracks(\r\n                    track,\r\n                    'not-converted.tracks.reasons.analysis'\r\n                  )\r\n                  this.recursiveConvertMusicIndex(nextIndex)\r\n                } else {\r\n                  fs.readFile(\r\n                    tempTrackDjDataConverterLocation,\r\n                    'utf-8',\r\n                    async (error, tempTrackDjDataConverterContentXml) => {\r\n                      if (error) {\r\n                        this.addWorkDoneSteps()\r\n                        this.addNotConvertedTracks(\r\n                          track,\r\n                          'not-converted.tracks.reasons.analysis'\r\n                        )\r\n                        this.recursiveConvertMusicIndex(nextIndex)\r\n                      } else {\r\n                        let trackConverted = await createTrackFromRekordboxXML(\r\n                          tempTrackDjDataConverterContentXml\r\n                            .replace(/(.*)(?=\\<TRACK)/gim, '')\r\n                            .replace(/(?<=TRACK\\>)(.*)/gim, '')\r\n                        )\r\n\r\n                        if (trackConverted.location) {\r\n                          track.setGridStart(trackConverted.gridStart)\r\n                          track.setHotCues(trackConverted.hotCues)\r\n                          track.setLocation(trackConverted.location)\r\n                          track.setMemoryCues(trackConverted.memoryCues)\r\n                          this.addConvertedTracks(track)\r\n                        } else {\r\n                          this.addNotConvertedTracks(\r\n                            track,\r\n                            'not-converted.tracks.reasons.analysis'\r\n                          )\r\n                        }\r\n                        this.addWorkDoneSteps()\r\n                        this.recursiveConvertMusicIndex(nextIndex)\r\n                      }\r\n                    }\r\n                  )\r\n                }\r\n              })\r\n            }\r\n          }\r\n        )\r\n      }\r\n    })\r\n  }\r\n\r\n  configValid = () => {\r\n    if (!this.state.validTraktorFile || !this.state.validRekordboxFile) {\r\n      this.setScreen(screen.config)\r\n    }\r\n\r\n    if (this.state.validTraktorFile && this.state.validRekordboxFile) {\r\n      this.setScreen(screen.main)\r\n    }\r\n  }\r\n\r\n  state = {\r\n    exampleStatus: true,\r\n    activeScreen: screen.main,\r\n    isPreparing: true,\r\n    traktorFile: '',\r\n    rekordboxFile: '',\r\n    readyToWork: false,\r\n    workingStatus: true,\r\n    workingMsg: '',\r\n    workingTrack: '',\r\n    tracksToConvert: [],\r\n    convertedTracks: [],\r\n    playlistToConvert: [],\r\n    convertedPlaylist: [],\r\n    workSteps: 0,\r\n    workDoneSteps: 0,\r\n    notConvertedTracks: [],\r\n    notConvertedPlaylists: [],\r\n    snackSuccess: false,\r\n    elapsedTimeSeconds: 0,\r\n    startDateTime: '',\r\n    validTraktorFile: true,\r\n    validRekordboxFile: true,\r\n    descriptionInvalidTraktorFile: false,\r\n    descriptionInvalidRekordboxFile: false,\r\n\r\n    exampleToggleStatus: e => this.exampleToggleStatus(e),\r\n    setScreen: screen => this.setScreen(screen),\r\n    setTraktorFile: location => this.setTraktorFile(location),\r\n    setRekordboxFile: location => this.setRekordboxFile(location),\r\n    setReadyToWork: boolen => this.setReadyToWork(boolen),\r\n    setWorkingStatus: boolen => this.setWorkingStatus(boolen),\r\n    setWorkingMsg: string => this.setWorkingMsg(string),\r\n    setWorkingTrack: string => this.setWorkingTrack(string),\r\n    addTrackToConvert: trackObject => this.addTrackToConvert(trackObject),\r\n    addConvertedTracks: trackObject => this.addConvertedTracks(trackObject),\r\n    addPlaylistToConvert: playlistObject =>\r\n      this.addPlaylistToConvert(playlistObject),\r\n    addConvertedPlaylist: playlistObject =>\r\n      this.addConvertedPlaylist(playlistObject),\r\n    addWorkSteps: () => this.addWorkSteps(),\r\n    addWorkDoneSteps: () => this.addWorkDoneSteps(),\r\n    addNotConvertedTracks: (trackObject, reason) =>\r\n      this.addNotConvertedTracks(trackObject, reason),\r\n    addNotConvertedPlaylists: (playlistObject, reason) =>\r\n      this.addNotConvertedPlaylists(playlistObject, reason),\r\n    goToMainScreen: () => this.goToMainScreen(),\r\n    goToConfigScreen: () => this.setScreen(screen.config),\r\n    goToWorkingScreen: () => this.setScreen(screen.working),\r\n    abortTheMagic: msgId => this.abortTheMagic(msgId),\r\n    doTheMagic: () => this.doTheMagic()\r\n  }\r\n\r\n  render() {\r\n    console.log()\r\n    return (\r\n      <AppContext.Provider value={this.state}>\r\n        {this.props.children}\r\n      </AppContext.Provider>\r\n    )\r\n  }\r\n}\r\nApp.contextType = IntlContext\r\nexport default injectIntl(App)\r\n",["279","280"],"D:\\www\\t2rb\\github\\t2rb\\src\\class\\Playlist.class.js",[],["281","282"],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\convertRGBToHex.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\screens\\workCanceled.screen.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\convertHexToRGB.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\screens\\language.screen.js",["283","284","285","286","287","288","289"],"D:\\www\\t2rb\\github\\t2rb\\src\\components\\ProgressBar.js",["290","291"],"D:\\www\\t2rb\\github\\t2rb\\src\\components\\AppIcon.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\context\\intl.context.js",["292","293","294","295","296"],"D:\\www\\t2rb\\github\\t2rb\\src\\components\\SecondaryScreen.js",["297","298"],"D:\\www\\t2rb\\github\\t2rb\\src\\class\\Track.class.js",["299"],"D:\\www\\t2rb\\github\\t2rb\\src\\helpers\\decodeString.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\components\\FileField.js",[],"D:\\www\\t2rb\\github\\t2rb\\src\\components\\ScreenTitle.js",[],{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","severity":1,"message":"305","line":5,"column":10,"nodeType":"306","messageId":"307","endLine":5,"endColumn":16},{"ruleId":"304","severity":1,"message":"308","line":6,"column":10,"nodeType":"306","messageId":"307","endLine":6,"endColumn":19},{"ruleId":"304","severity":1,"message":"309","line":7,"column":10,"nodeType":"306","messageId":"307","endLine":7,"endColumn":20},{"ruleId":"304","severity":1,"message":"310","line":10,"column":10,"nodeType":"306","messageId":"307","endLine":10,"endColumn":25},{"ruleId":"304","severity":1,"message":"311","line":11,"column":8,"nodeType":"306","messageId":"307","endLine":11,"endColumn":14},{"ruleId":"304","severity":1,"message":"312","line":14,"column":7,"nodeType":"306","messageId":"307","endLine":14,"endColumn":9},{"ruleId":"304","severity":1,"message":"313","line":54,"column":15,"nodeType":"306","messageId":"307","endLine":54,"endColumn":18},{"ruleId":"314","severity":1,"message":"315","line":224,"column":29,"nodeType":"316","messageId":"317","endLine":224,"endColumn":30,"suggestions":"318"},{"ruleId":"314","severity":1,"message":"315","line":224,"column":33,"nodeType":"316","messageId":"317","endLine":224,"endColumn":34,"suggestions":"319"},{"ruleId":"300","replacedBy":"320"},{"ruleId":"302","replacedBy":"321"},{"ruleId":"304","severity":1,"message":"305","line":1,"column":10,"nodeType":"306","messageId":"307","endLine":1,"endColumn":16},{"ruleId":"300","replacedBy":"322"},{"ruleId":"302","replacedBy":"323"},{"ruleId":"304","severity":1,"message":"324","line":7,"column":20,"nodeType":"306","messageId":"307","endLine":7,"endColumn":30},{"ruleId":"314","severity":1,"message":"325","line":283,"column":38,"nodeType":"316","messageId":"317","endLine":283,"endColumn":39,"suggestions":"326"},{"ruleId":"314","severity":1,"message":"327","line":284,"column":40,"nodeType":"316","messageId":"317","endLine":284,"endColumn":41,"suggestions":"328"},{"ruleId":"304","severity":1,"message":"329","line":7,"column":8,"nodeType":"306","messageId":"307","endLine":7,"endColumn":13},{"ruleId":"304","severity":1,"message":"330","line":8,"column":8,"nodeType":"306","messageId":"307","endLine":8,"endColumn":21},{"ruleId":"304","severity":1,"message":"331","line":9,"column":8,"nodeType":"306","messageId":"307","endLine":9,"endColumn":16},{"ruleId":"304","severity":1,"message":"332","line":10,"column":8,"nodeType":"306","messageId":"307","endLine":10,"endColumn":25},{"ruleId":"304","severity":1,"message":"330","line":7,"column":8,"nodeType":"306","messageId":"307","endLine":7,"endColumn":21},{"ruleId":"304","severity":1,"message":"333","line":9,"column":10,"nodeType":"306","messageId":"307","endLine":9,"endColumn":16},{"ruleId":"304","severity":1,"message":"334","line":5,"column":10,"nodeType":"306","messageId":"307","endLine":5,"endColumn":14},{"ruleId":"300","replacedBy":"335"},{"ruleId":"302","replacedBy":"336"},{"ruleId":"337","severity":1,"message":"338","line":39,"column":3,"nodeType":"339","messageId":"340","endLine":39,"endColumn":7},{"ruleId":"304","severity":1,"message":"330","line":7,"column":8,"nodeType":"306","messageId":"307","endLine":7,"endColumn":21},{"ruleId":"304","severity":1,"message":"333","line":9,"column":10,"nodeType":"306","messageId":"307","endLine":9,"endColumn":16},{"ruleId":"300","replacedBy":"341"},{"ruleId":"302","replacedBy":"342"},{"ruleId":"304","severity":1,"message":"343","line":3,"column":8,"nodeType":"306","messageId":"307","endLine":3,"endColumn":14},{"ruleId":"304","severity":1,"message":"344","line":4,"column":8,"nodeType":"306","messageId":"307","endLine":4,"endColumn":18},{"ruleId":"300","replacedBy":"345"},{"ruleId":"302","replacedBy":"346"},{"ruleId":"304","severity":1,"message":"347","line":7,"column":10,"nodeType":"306","messageId":"307","endLine":7,"endColumn":26},{"ruleId":"304","severity":1,"message":"348","line":8,"column":10,"nodeType":"306","messageId":"307","endLine":8,"endColumn":22},{"ruleId":"304","severity":1,"message":"349","line":8,"column":24,"nodeType":"306","messageId":"307","endLine":8,"endColumn":31},{"ruleId":"314","severity":1,"message":"325","line":362,"column":46,"nodeType":"316","messageId":"317","endLine":362,"endColumn":47,"suggestions":"350"},{"ruleId":"314","severity":1,"message":"327","line":363,"column":48,"nodeType":"316","messageId":"317","endLine":363,"endColumn":49,"suggestions":"351"},{"ruleId":"300","replacedBy":"352"},{"ruleId":"302","replacedBy":"353"},{"ruleId":"300","replacedBy":"354"},{"ruleId":"302","replacedBy":"355"},{"ruleId":"304","severity":1,"message":"356","line":5,"column":8,"nodeType":"306","messageId":"307","endLine":5,"endColumn":15},{"ruleId":"304","severity":1,"message":"357","line":6,"column":8,"nodeType":"306","messageId":"307","endLine":6,"endColumn":18},{"ruleId":"304","severity":1,"message":"358","line":7,"column":8,"nodeType":"306","messageId":"307","endLine":7,"endColumn":18},{"ruleId":"304","severity":1,"message":"359","line":8,"column":8,"nodeType":"306","messageId":"307","endLine":8,"endColumn":20},{"ruleId":"304","severity":1,"message":"360","line":10,"column":10,"nodeType":"306","messageId":"307","endLine":10,"endColumn":16},{"ruleId":"304","severity":1,"message":"361","line":16,"column":3,"nodeType":"306","messageId":"307","endLine":16,"endColumn":11},{"ruleId":"304","severity":1,"message":"344","line":29,"column":3,"nodeType":"306","messageId":"307","endLine":29,"endColumn":13},{"ruleId":"304","severity":1,"message":"344","line":2,"column":8,"nodeType":"306","messageId":"307","endLine":2,"endColumn":18},{"ruleId":"304","severity":1,"message":"362","line":3,"column":10,"nodeType":"306","messageId":"307","endLine":3,"endColumn":13},{"ruleId":"304","severity":1,"message":"363","line":2,"column":8,"nodeType":"306","messageId":"307","endLine":2,"endColumn":16},{"ruleId":"304","severity":1,"message":"347","line":3,"column":24,"nodeType":"306","messageId":"307","endLine":3,"endColumn":40},{"ruleId":"304","severity":1,"message":"364","line":3,"column":42,"nodeType":"306","messageId":"307","endLine":3,"endColumn":57},{"ruleId":"304","severity":1,"message":"365","line":6,"column":10,"nodeType":"306","messageId":"307","endLine":6,"endColumn":20},{"ruleId":"304","severity":1,"message":"311","line":8,"column":8,"nodeType":"306","messageId":"307","endLine":8,"endColumn":14},{"ruleId":"304","severity":1,"message":"344","line":3,"column":45,"nodeType":"306","messageId":"307","endLine":3,"endColumn":55},{"ruleId":"304","severity":1,"message":"366","line":7,"column":10,"nodeType":"306","messageId":"307","endLine":7,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":1,"column":10,"nodeType":"306","messageId":"307","endLine":1,"endColumn":16},"no-native-reassign",["367"],"no-negated-in-lhs",["368"],"no-unused-vars","'HotCue' is defined but never used.","Identifier","unusedVar","'MemoryCue' is defined but never used.","'getOpenKey' is defined but never used.","'convertRGBToHex' is defined but never used.","'moment' is defined but never used.","'fs' is assigned a value but never used.","'aaa' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["369","370"],["371","372"],["367"],["368"],["367"],["368"],"'AlertProps' is defined but never used.","Unnecessary escape character: \\<.",["373","374"],"Unnecessary escape character: \\>.",["375","376"],"'Badge' is defined but never used.","'AccountCircle' is defined but never used.","'MailIcon' is defined but never used.","'NotificationsIcon' is defined but never used.","'config' is defined but never used.","'Aaaa' is defined but never used.",["367"],["368"],"no-dupe-keys","Duplicate key 'lang'.","ObjectExpression","unexpected",["367"],["368"],"'Button' is defined but never used.","'Typography' is defined but never used.",["367"],["368"],"'FormattedMessage' is defined but never used.","'IntlProvider' is defined but never used.","'useIntl' is defined but never used.",["377","378"],["379","380"],["367"],["368"],["367"],["368"],"'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'CancelIcon' is defined but never used.","'SettingsIcon' is defined but never used.","'screen' is defined but never used.","'Checkbox' is defined but never used.","'Box' is defined but never used.","'ReactDOM' is defined but never used.","'FormattedNumber' is defined but never used.","'AppContext' is defined but never used.","'Clickable' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"381","fix":"382","desc":"383"},{"messageId":"384","fix":"385","desc":"386"},{"messageId":"381","fix":"387","desc":"383"},{"messageId":"384","fix":"388","desc":"386"},{"messageId":"381","fix":"389","desc":"383"},{"messageId":"384","fix":"390","desc":"386"},{"messageId":"381","fix":"391","desc":"383"},{"messageId":"384","fix":"392","desc":"386"},{"messageId":"381","fix":"393","desc":"383"},{"messageId":"384","fix":"394","desc":"386"},{"messageId":"381","fix":"395","desc":"383"},{"messageId":"384","fix":"396","desc":"386"},"removeEscape",{"range":"397","text":"398"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"399","text":"400"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"401","text":"398"},{"range":"402","text":"400"},{"range":"403","text":"398"},{"range":"404","text":"400"},{"range":"405","text":"398"},{"range":"406","text":"400"},{"range":"407","text":"398"},{"range":"408","text":"400"},{"range":"409","text":"398"},{"range":"410","text":"400"},[6372,6373],"",[6372,6372],"\\",[6376,6377],[6376,6376],[7931,7932],[7931,7931],[7989,7990],[7989,7989],[10154,10155],[10154,10154],[10220,10221],[10220,10220]]